!function(){var t={7084:function(r,e,t){var o={"./groupCardComponent.js":5025};function n(r){r=u(r);return t(r)}function u(r){if(t.o(o,r))return o[r];r=new Error("Cannot find module '"+r+"'");throw r.code="MODULE_NOT_FOUND",r}n.keys=function(){return Object.keys(o)},n.resolve=u,(r.exports=n).id=7084},2104:function(r,e,t){var o={"./groupResources.js":7240,"./groupsConstants.js":7376};function n(r){r=u(r);return t(r)}function u(r){if(t.o(o,r))return o[r];r=new Error("Cannot find module '"+r+"'");throw r.code="MODULE_NOT_FOUND",r}n.keys=function(){return Object.keys(o)},n.resolve=u,(r.exports=n).id=2104},5027:function(r,e,t){var o={"./exileUserController.js":2233,"./groupCardController.js":4945};function n(r){r=u(r);return t(r)}function u(r){if(t.o(o,r))return o[r];r=new Error("Cannot find module '"+r+"'");throw r.code="MODULE_NOT_FOUND",r}n.keys=function(){return Object.keys(o)},n.resolve=u,(r.exports=n).id=5027},8913:function(r,e,t){var o={"./groupMembershipService.js":9233,"./groupUtilityService.js":85,"./groupsService.js":9695};function n(r){r=u(r);return t(r)}function u(r){if(t.o(o,r))return o[r];r=new Error("Cannot find module '"+r+"'");throw r.code="MODULE_NOT_FOUND",r}n.keys=function(){return Object.keys(o)},n.resolve=u,(r.exports=n).id=8913},8292:function(r,e,t){var o={"./components/templates/exileUserModal.html":6361,"./components/templates/groupCard.html":3290};function n(r){r=u(r);return t(r)}function u(r){if(t.o(o,r))return o[r];r=new Error("Cannot find module '"+r+"'");throw r.code="MODULE_NOT_FOUND",r}n.keys=function(){return Object.keys(o)},n.resolve=u,(r.exports=n).id=8292},726:function(r){function u(r){return r.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function s(r){return r.split("/").pop().replace(".html","")}var e={importFilesUnderPath:function(r){r.keys().forEach(r)},templateCacheGenerator:function(r,e,o,n){return r.module(e,[]).run(["$templateCache",function(t){o&&o.keys().forEach(function(r){var e=u(s(r));t.put(e,o(r))}),n&&n.keys().forEach(function(r){var e=u(s(r));t.put(e,n(r).replace(/<\/?script[^>]*>/gi,""))})}])}};r.exports=e},5025:function(r,e,t){"use strict";t.r(e);var o={templateUrl:"group-card",bindings:{group:"<"},controller:"groupCardController"};t(6519).Z.component("groupCard",o),e.default=o},7240:function(r,e,t){"use strict";t.r(e);var o={templates:{groupsListBaseTemplate:"groups-list-base",groupsListTemplate:"groups-list",groupAboutTemplate:"group-about",groupBaseTemplate:"group-base",groupWallTemplate:"group-wall",groupCommentsTemplate:"group-comments",groupMembersListTemplate:"group-members-list",groupGamesTemplate:"group-games",groupStoreTemplate:"group-store",groupStoreItemTemplate:"group-store-item",GroupResultsBaseTemplate:"group-results-base",groupCatalogItemTemplate:"group-catalog-item",groupSearchBarTemplate:"group-search-bar"},modals:{openedClass:"modal-open-noscroll",exileUser:{templateUrl:"exile-user-modal",controller:"exileUserController"},leaveGroup:{templateUrl:"leave-group-modal",controller:"leaveGroupController"},reportAbuse:{templateUrl:"report-abuse-modal",controller:"reportAbuseController"}}};t(6519).Z.constant("groupResources",o),e.default=o},7376:function(r,e,t){"use strict";t.r(e);var o=t(792),t=t(6519),o={bannerExpiryInMilliseconds:5e3,wallReloadDelay:1e3,thumbnailSizes:{small:"150x150",large:"420x420"},relationshipTypes:{allies:"Allies",enemies:"Enemies"},groupIconFileTypes:[".jpg",".png",".jpeg"],absoluteUrls:{createGroup:o.Endpoints.getAbsoluteUrl("/groups/create"),moreGroups:o.Endpoints.getAbsoluteUrl("/search/groups"),myGroups:o.Endpoints.getAbsoluteUrl("/my/groups")},urls:{getGroup:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{id}"),getGroupMetadata:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/metadata"),getGroupConfigurationMetadata:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/configuration/metadata"),updateGroupSettings:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{id}/settings"),searchGroups:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/search"),deleteWallPostsByUser:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/wall/users/{userId}/posts"),getGroupRelationships:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/relationships/{groupRelationshipType}"),groupLookup:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/search/lookup"),getCurrency:"".concat(o.EnvironmentUrls.economyApi,"/v1/groups/{groupId}/currency"),getGroupMembership:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{id}/membership"),updatePrimaryGroup:"".concat(o.EnvironmentUrls.groupsApi,"/v1/user/groups/primary"),claimOwnership:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/claim-ownership"),deleteGroupJoinRequest:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/join-requests/users/{userId}"),joinGroup:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{id}/users"),updateUserRole:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/users/{userId}"),getGroupRoles:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{id}/roles"),getGroupRolePermissions:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/roles/{roleSetId}/permissions"),getGroupRoleMembers:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/roles/{roleId}/users"),getGroupRolesForUser:"".concat(o.EnvironmentUrls.groupsApi,"/v2/users/{userId}/groups/roles"),usernames:"".concat(o.EnvironmentUrls.usersApi,"/v1/usernames/users"),usersSearch:"".concat(o.EnvironmentUrls.usersApi,"/v1/users/search"),getGroupDetailsPolicy:"".concat(o.EnvironmentUrls.universalAppConfigurationApi,"/v1/behaviors/group-details-ui/content"),getConfigureGroupPolicy:"".concat(o.EnvironmentUrls.universalAppConfigurationApi,"/v1/behaviors/configure-group-ui/content"),getGroupPolicyInfo:"".concat(o.EnvironmentUrls.groupsApi,"/v1/groups/policies"),getAddFundsAllowedUrl:"".concat(o.EnvironmentUrls.economyApi,"/v1/groups/{groupId}/addfunds/allowed"),getUserCurrency:"".concat(o.EnvironmentUrls.economyApi,"/v1/users/{userId}/currency")},errorCodes:{internal:{unknown:0,captcha:1,invalidMembership:10,tooManyGroups:11,insufficientRobux:12,nameInvalid:13,nameModerated:14,groupIconInvalid:15,groupIconMissing:16,tooManyRequests:17,descriptionTooLong:18,nameTooLong:19,duplicateName:20,featureDisabled:21,groupIconTooLarge:22},sendGroupWallPost:{7:1},membership:{captcha:5,operationUnavailable:18},getGroupMembership:{3:1}},statusCodes:{payloadTooLarge:413},translations:{buildGroupRolesListError:"Message.BuildGroupRolesListError",loadGroupError:"Message.LoadGroupError",loadGroupMetadataError:"Message.LoadGroupMetadataError",loadGroupsListError:"Message.LoadGroupMembershipsError",loadGroupConfigMetadataError:"Message.ConfigMetadataLoadFail",loadGroupMembershipError:"Message.LoadUserGroupMembershipError",defaultError:"Message.DefaultError",deleteWallPostsByUserError:"Message.DeleteWallPostsByUserError",groupMembershipsUnavailableError:"Message.GroupMembershipsUnavailableError"}};t.Z.constant("groupsConstants",o),e.default=o},2233:function(r,e,t){"use strict";t.r(e);t=t(6519);function o(r,e,t,o,n,u,s,a){r.params=o,r.exileUser=function(){r.layout.deleteWallPosts&&t.deleteWallPostsByUser(r.params.groupId,r.params.userId).then(function(){setTimeout(function(){o.refreshGroupWall()},u.wallReloadDelay)},function(r){a.warning(s.get(u.translations.deleteWallPostsByUserError)),n.debug("--deleteWallPostsByUser-error---")}),t.exileUser(r.params.groupId,r.params.userId).then(function(){o.reloadCurrentPage()},function(r){r&&r.errors&&r.errors[0]&&r.errors[0].code===u.errorCodes.membership.operationUnavailable&&a.warning(s.get(u.translations.groupMembershipsUnavailableError))}),e.close()},r.close=function(){e.dismiss()},r.init=function(){r.layout={deleteWallPosts:!1}},r.init()}o.$inject=["$scope","$uibModalInstance","groupsService","modalData","$log","groupsConstants","languageResource","systemFeedbackService"],t.Z.controller("exileUserController",o),e.default=o},4945:function(r,e,t){"use strict";t.r(e);t=t(6519);function o(r,e){var t=this;t.$onInit=function(){t.thumbnailTypes=e.thumbnailTypes,t.url=r("seoUrl")("groups",t.group.id,t.group.name)}}o.$inject=["$filter","thumbnailConstants"],t.Z.controller("groupCardController",o),e.default=o},6519:function(r,e,t){"use strict";var o=t(5734),n=t.n(o),o=t(792),n=n().module("groups",["robloxApp","groupsTemplates"]);e.Z=n},9233:function(r,e,t){"use strict";t.r(e);t=t(6519);function o(r,s,a,i){var l={};return{getGroupMembership:function(o){return r(function(e,r){if(!l[o]){var t={url:i("formatString")(a.urls.getGroupMembership,{id:o})};return s.httpGet(t).then(function(r){l[o]=r,e(r)},r)}e(l[o])})},joinGroup:function(n,u){return r(function(e,r){var t={url:i("formatString")(a.urls.joinGroup,{id:n})},o=u||{};return s.httpPost(t,o).then(function(r){l={},e(r)},r)})},claimOwnership:function(o){return r(function(e,r){var t={url:i("formatString")(a.urls.claimOwnership,{groupId:o})};return s.httpPost(t,{}).then(function(r){l={},e(r)},r)})},makePrimaryGroup:function(n){return r(function(e,r){var t={groupId:n},o={url:a.urls.updatePrimaryGroup};return s.httpPost(o,t).then(function(r){l={},e(r)},r)})},removePrimaryGroup:function(){return r(function(e,r){var t={url:a.urls.updatePrimaryGroup};return s.httpDelete(t,{}).then(function(r){l={},e(r)},r)})},leaveGroup:function(o,n){return r(function(e,r){var t={url:i("formatString")(a.urls.updateUserRole,{groupId:o,userId:n})};return s.httpDelete(t,{}).then(function(r){l={},e(r)},r)})},cancelGroupJoinRequest:function(o,n){return r(function(e,r){var t={url:i("formatString")(a.urls.deleteGroupJoinRequest,{groupId:o,userId:n})};return s.httpDelete(t,{}).then(function(r){l={},e(r)},r)})}}}o.$inject=["$q","httpService","groupsConstants","$filter"],t.Z.factory("groupMembershipService",o),e.default=o},85:function(r,e,t){"use strict";t.r(e);var n=t(792),t=t(6519);function o(t,o){return{parseGroupId:function(r){r=/\/groups\/(\d+)\//g.exec(r);return r&&1<r.length?Number(r[1]):null},buildGameReferralUrl:function(r){var e=o.getGameDetailReferralUrls();return t("formatString")(e.groupDetail,{placeId:r})},profilePageUrl:function(r){return n.Endpoints?n.Endpoints.getAbsoluteUrl("/users/".concat(r,"/profile")):"/users/".concat(r,"/profile")}}}o.$inject=["$filter","urlService"],t.Z.factory("groupUtilityService",o),e.default=o},9695:function(r,e,t){"use strict";t.r(e);var n=t(792),t=t(6519);function o(e,s,a,i){var o;return{getGroup:function(r){r={url:i("formatString")(a.urls.getGroup,{id:r})};return s.httpGet(r,{}).then(function(r){var e,t,o;return null!=r&&r.owner&&(t=(e=r.owner).displayName,o=e.username,e.nameForDisplay=n.DisplayNames.Enabled()?t:o),r})},getGroupMetadata:function(){var r={url:i("formatString")(a.urls.getGroupMetadata)};return s.httpGet(r)},getGroupConfigurationMetadata:function(){return e(function(e,r){var t;o?e(o):(t={url:i("formatString")(a.urls.getGroupConfigurationMetadata)},s.httpGet(t).then(function(r){e(o=r)},r))})},getGroupRoles:function(r){r={url:i("formatString")(a.urls.getGroupRoles,{id:r}),retryable:!1};return s.httpGet(r)},getGroupRolePermissions:function(r,e){e={url:i("formatString")(a.urls.getGroupRolePermissions,{groupId:r,roleSetId:e})};return s.httpGet(e,{})},exileUser:function(r,e){e={url:i("formatString")(a.urls.updateUserRole,{groupId:r,userId:e})};return s.httpDelete(e)},deleteWallPostsByUser:function(r,e){e={url:i("formatString")(a.urls.deleteWallPostsByUser,{groupId:r,userId:e})};return s.httpDelete(e)},getGroupSettings:function(r){r={url:i("formatString")(a.urls.updateGroupSettings,{id:r})};return s.httpGet(r,{})},updateGroupSettings:function(r,e){r={url:i("formatString")(a.urls.updateGroupSettings,{id:r})};return s.httpPatch(r,e)},getUserIdsFromUsernames:function(n,r){var u=1<arguments.length&&void 0!==r&&r;return e(function(e,t){var r={url:i("formatString")(a.urls.usernames)},o={usernames:n,excludeBannedUsers:u};s.httpPost(r,o).then(function(r){e(r.data)},function(r){t(r)})})},getUserRoleInGroup:function(o,n){return e(function(e,r){var t={url:i("formatString")(a.urls.getGroupRolesForUser,{userId:o})};s.httpGet(t).then(function(r){r.data&&((r=r.data.filter(function(r){return r.group.id===n}))&&0<r.length?e(r[0].role):e(null))},function(){r("Could not fetch user groups. Please try again.")})})},getGroupDetailRules:function(){var r={url:i("formatString")(a.urls.getGroupDetailsPolicy)};return s.httpGet(r)},getConfigureGroupRules:function(){var r={url:i("formatString")(a.urls.getConfigureGroupPolicy)};return s.httpGet(r)},getGroupPolicyInfo:function(r){var e={url:i("formatString")(a.urls.getGroupPolicyInfo)},r={groupIds:r};return s.httpPost(e,r)},getGroupCurrency:function(r){var o={url:i("formatString")(a.urls.getCurrency,{groupId:r})};return e(function(e,t){return s.httpGet(o).then(function(r){e(r.robux)},function(r){r=s.getApiErrorCodes(r);t(r[0]||0)})})},getUserCurrency:function(r){var o={url:i("formatString")(a.urls.getUserCurrency,{userId:r})};return e(function(e,t){return s.httpGet(o).then(function(r){e(r.robux)},function(r){r=s.getApiErrorCodes(r);t(r[0]||0)})})},getAddFundsAllowed:function(r){var t={url:i("formatString")(a.urls.getAddFundsAllowedUrl,{groupId:r})};return e(function(e,r){return s.httpGet(t).then(function(r){e(r)},function(){e(!1)})})}}}o.$inject=["$q","httpService","groupsConstants","$filter"],t.Z.factory("groupsService",o),e.default=o},6361:function(r){r.exports='<div class="modal-header"> <button type="button" class="close" ng-click="close()"> <span aria-hidden="true"> <span class="icon-close"></span> </span> <span class="sr-only" ng-bind="\'Action.Close\' | translate"></span> </button> <h4 ng-bind="\'Heading.ExileUserWarning\' | translate"></h4> </div> <div class="modal-body"> <span class="text-description" ng-bind="\'Description.ExileUserWarning\' | translate"></span> </div> <div class="modal-buttons"> <button class="modal-button btn-secondary-md" ng-click="exileUser()" ng-bind="\'Action.Exile\' | translate"></button> <button class="modal-button btn-control-md" ng-click="close()" ng-bind="\'Action.Cancel\' | translate"></button> </div> <div class="modal-footer" ng-if="params.showDeletePostsCheckbox"> <div class="checkbox"> <input id="deleteWallPostsByUserCheckbox" type="checkbox" ng-model="layout.deleteWallPosts"> <label for="deleteWallPostsByUserCheckbox" ng-bind="\'Label.DeleteAllPostsByUser\' | translate"></label> </div> </div> '},3290:function(r){r.exports='<a ng-href="{{ $ctrl.url }}" target="_self" class="card-item game-card-container"> <thumbnail-2d thumbnail-type="$ctrl.thumbnailTypes.groupIcon" thumbnail-target-id="$ctrl.group.id" class="game-card-thumb-container"></thumbnail-2d> <div class="text-overflow game-card-name" title="{{ $ctrl.group.name }}" ng-bind="$ctrl.group.name"> </div> <div class="text-overflow game-card-name-secondary" ng-bind="\'Label.Members\' | translate:{ memberCount: $ctrl.group.memberCount}"> </div> </a>'},792:function(r){"use strict";r.exports=Roblox},5734:function(r){"use strict";r.exports=angular}},o={};function n(r){if(o[r])return o[r].exports;var e=o[r]={exports:{}};return t[r](e,e.exports,n),e.exports}n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,{a:e}),e},n.d=function(r,e){for(var t in e)n.o(e,t)&&!n.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},function(){"use strict";var r=n(5734),e=n.n(r),t=n(726);n(6519),(0,t.importFilesUnderPath)(n(7084)),(0,t.importFilesUnderPath)(n(2104)),(0,t.importFilesUnderPath)(n(5027)),(0,t.importFilesUnderPath)(n(8913)),r=n(8292),(0,t.templateCacheGenerator)(e(),"groupsTemplates",r)}()}();
//# sourceMappingURL=/rbxcdn/js/b35039af34fbe2241cb6-groups.js.map

!function(){var n={4312:function(e,t,n){var r={"./affiliates/configureGroupAffiliateCardComponent.js":673,"./affiliates/configureGroupAffiliateRequestCardComponent.js":2147,"./affiliates/configureGroupAlliesComponent.js":3570,"./affiliates/configureGroupAlliesListComponent.js":719,"./affiliates/configureGroupAllyRequestsComponent.js":5290,"./affiliates/configureGroupEnemiesComponent.js":5688,"./affiliates/configureGroupEnemiesListComponent.js":5938,"./auditLogComponent.js":7227,"./configureGroupInformationComponent.js":1309,"./configureGroupMenuComponent.js":62,"./configureGroupPageComponent.js":6512,"./configureGroupRoleSettingComponent.js":1837,"./configureGroupRolesComponent.js":1604,"./configureGroupSettingToggleComponent.js":8103,"./configureGroupSettingsComponent.js":738,"./members/configureGroupMemberCardComponent.js":6027,"./members/configureGroupMemberRequestCardComponent.js":2941,"./members/configureGroupMemberRequestsComponent.js":9465,"./members/configureGroupMembersComponent.js":6744,"./members/configureGroupMembersListComponent.js":8332};function a(e){e=o(e);return n(e)}function o(e){if(n.o(r,e))return r[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(r)},a.resolve=o,(e.exports=a).id=4312},6620:function(e,t,n){var r={"./auditLogConstants.js":9586,"./configureGroupConstants.js":6634};function a(e){e=o(e);return n(e)}function o(e){if(n.o(r,e))return r[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(r)},a.resolve=o,(e.exports=a).id=6620},6173:function(e,t,n){var r={"./affiliates/configureGroupAffiliateCardController.js":3147,"./affiliates/configureGroupAffiliateRequestCardController.js":3912,"./affiliates/configureGroupAffiliateRequestsController.js":3361,"./affiliates/configureGroupAffiliatesListController.js":1111,"./auditLogController.js":9311,"./configureGroupInformationController.js":8657,"./configureGroupMenuController.js":6451,"./configureGroupPageController.js":8453,"./configureGroupRoleSettingsController.js":9716,"./configureGroupRolesController.js":3839,"./configureGroupSettingToggleController.js":2187,"./configureGroupSettingsController.js":4916,"./members/configureGroupMemberCardController.js":4724,"./members/configureGroupMemberRequestCardController.js":1737,"./members/configureGroupMemberRequestsController.js":5837,"./members/configureGroupMembersController.js":9599,"./members/configureGroupMembersListController.js":7053,"./modals/changeOwnerModalController.js":469,"./modals/createRoleModalController.js":8928,"./modals/sendAffiliateRequestModalController.js":4974};function a(e){e=o(e);return n(e)}function o(e){if(n.o(r,e))return r[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(r)},a.resolve=o,(e.exports=a).id=6173},1866:function(e,t,n){var r={"./auditLogService.js":6283,"./changeOwnerService.js":5657,"./configureGroupAffiliatesService.js":8819,"./configureGroupMembersService.js":2343,"./configureGroupRolesService.js":4054,"./configureGroupService.js":1466,"./configureGroupUtilityService.js":9298,"./translationService.js":5105};function a(e){e=o(e);return n(e)}function o(e){if(n.o(r,e))return r[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(r)},a.resolve=o,(e.exports=a).id=1866},3323:function(e,t,n){var r={"./components/templates/affiliates/configureGroupAffiliateCard.html":6255,"./components/templates/affiliates/configureGroupAffiliateRequestCard.html":1996,"./components/templates/affiliates/configureGroupAllies.html":6915,"./components/templates/affiliates/configureGroupAlliesList.html":6138,"./components/templates/affiliates/configureGroupAllyRequests.html":1120,"./components/templates/affiliates/configureGroupEnemies.html":1089,"./components/templates/affiliates/configureGroupEnemiesList.html":5617,"./components/templates/auditLog.html":4614,"./components/templates/configureGroupInformation.html":1265,"./components/templates/configureGroupMenu.html":2511,"./components/templates/configureGroupPage.html":9727,"./components/templates/configureGroupRoleSettings.html":1713,"./components/templates/configureGroupRoles.html":9424,"./components/templates/configureGroupSettingToggle.html":2099,"./components/templates/configureGroupSettings.html":1610,"./components/templates/members/configureGroupMemberCard.html":897,"./components/templates/members/configureGroupMemberRequestCard.html":7270,"./components/templates/members/configureGroupMemberRequests.html":1851,"./components/templates/members/configureGroupMembers.html":3945,"./components/templates/members/configureGroupMembersList.html":7813,"./components/templates/modals/changeOwnerModal.html":8589,"./components/templates/modals/createRoleModal.html":6260,"./components/templates/modals/sendAffiliateRequestModal.html":273,"./components/templates/popovers/configureGroupAffiliateCardPopover.html":3153,"./components/templates/popovers/configureGroupMemberCardPopover.html":3061};function a(e){e=o(e);return n(e)}function o(e){if(n.o(r,e))return r[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(r)},a.resolve=o,(e.exports=a).id=3323},726:function(e){function o(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function i(e){return e.split("/").pop().replace(".html","")}var t={importFilesUnderPath:function(e){e.keys().forEach(e)},templateCacheGenerator:function(e,t,r,a){return e.module(t,[]).run(["$templateCache",function(n){r&&r.keys().forEach(function(e){var t=o(i(e));n.put(t,r(e))}),a&&a.keys().forEach(function(e){var t=o(i(e));n.put(t,a(e).replace(/<\/?script[^>]*>/gi,""))})}])}};e.exports=t},673:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-affiliate-card",bindings:{groupId:"<",affiliateGroup:"<",relationshipType:"<",reloadCurrentPage:"&"},controller:"configureGroupAffiliateCardController"};n(9683).Z.component("configureGroupAffiliateCard",r),t.default=r},2147:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-affiliate-request-card",bindings:{allyRequest:"<",groupId:"<",relationshipType:"<",reloadCurrentPage:"&"},controller:"configureGroupAffiliateRequestCardController"};n(9683).Z.component("configureGroupAffiliateRequestCard",r),t.default=r},3570:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-allies",bindings:{group:"<",relationshipType:"<"}};n(9683).Z.component("configureGroupAllies",r),t.default=r},719:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-allies-list",bindings:{groupId:"<",relationshipType:"<"},controller:"configureGroupAffiliatesListController"};n(9683).Z.component("configureGroupAlliesList",r),t.default=r},5290:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-ally-requests",bindings:{groupId:"<",relationshipType:"<"},controller:"configureGroupAffiliateRequestsController"};n(9683).Z.component("configureGroupAllyRequests",r),t.default=r},5688:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-enemies",bindings:{group:"<",relationshipType:"<"}};n(9683).Z.component("configureGroupEnemies",r),t.default=r},5938:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-enemies-list",bindings:{groupId:"<",relationshipType:"<"},controller:"configureGroupAffiliatesListController"};n(9683).Z.component("configureGroupEnemiesList",r),t.default=r},7227:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"audit-log",bindings:{groupId:"<"},controller:"auditLogController"};n(9683).Z.component("auditLog",r),t.default=r},1309:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-information",bindings:{group:"<",metadata:"<"},controller:"configureGroupInformationController"};n(9683).Z.component("configureGroupInformation",r),t.default=r},62:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-menu",bindings:{menuOptions:"<",currentMenuOption:"<",currentSubmenuOption:"<"},controller:"configureGroupMenuController"};n(9683).Z.component("configureGroupMenu",r),t.default=r},6512:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-page",controller:"configureGroupPageController"};n(9683).Z.component("configureGroupPage",r),t.default=r},1837:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-role-settings",bindings:{groupRole:"<",permissions:"<",group:"<",metadata:"<",deleteRole:"&"},controller:"configureGroupRoleSettingsController"};n(9683).Z.component("configureGroupRoleSettings",r),t.default=r},1604:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-roles",bindings:{group:"<",metadata:"<",reloadGroupFunds:"="},controller:"configureGroupRolesController"};n(9683).Z.component("configureGroupRoles",r),t.default=r},8103:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-setting-toggle",bindings:{settingName:"@",label:"@",textDescription:"@",value:"<",disabled:"&",click:"&"},controller:"configureGroupSettingToggleController"};n(9683).Z.component("configureGroupSettingToggle",r),t.default=r},738:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-settings",bindings:{group:"<",metadata:"<"},controller:"configureGroupSettingsController"};n(9683).Z.component("configureGroupSettings",r),t.default=r},6027:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-member-card",bindings:{member:"<",configurableRoles:"<",group:"<",metadata:"<",exileUser:"<",updateUserRole:"<",index:"<"},controller:"configureGroupMemberCardController"};n(9683).Z.component("configureGroupMemberCard",r),t.default=r},2941:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-member-request-card",bindings:{group:"<",memberRequest:"<",reloadCurrentPage:"&"},controller:"configureGroupMemberRequestCardController"};n(9683).Z.component("configureGroupMemberRequestCard",r),t.default=r},9465:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-member-requests",bindings:{group:"<"},controller:"configureGroupMemberRequestsController"};n(9683).Z.component("configureGroupMemberRequests",r),t.default=r},6744:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-members",bindings:{group:"<",metadata:"<"},controller:"configureGroupMembersController"};n(9683).Z.component("configureGroupMembers",r),t.default=r},8332:function(e,t,n){"use strict";n.r(t);var r={templateUrl:"configure-group-members-list",bindings:{group:"<",metadata:"<"},controller:"configureGroupMembersListController"};n(9683).Z.component("configureGroupMembersList",r),t.default=r},9683:function(e,t,n){"use strict";var i=n(792),r=n(5734),s=n.n(r),r=s().module("configureGroup",["robloxApp","ui.bootstrap","ui.router","configureGroupTemplates","groups","cursorPagination","modal","thumbnails","socialLinksConfiguration","groupPayouts","systemFeedback","fileUpload","infiniteScroll","verticalMenu","revenue","searchDropdown"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","languageResourceProvider","configureGroupConstants",function(n,e,t,r,a){var o=window.location.href;-1!=o.indexOf("#")&&-1==o.indexOf("#!")&&(window.location.href=o.replace("#","#!")),t.html5Mode(!1),t.hashPrefix("!"),e.otherwise("/information"),s().forEach(a.menuOptions,function(t){n.state(t.name,{url:"/".concat(t.name),label:t.displayName,authenticate:!1,menuOption:t,submenuOption:t.submenuOptions[0]}),s().forEach(t.submenuOptions,function(e){n.state("".concat(t.name,"/").concat(e.name),{url:"/".concat(t.name,"/").concat(e.name),label:e.displayName,authenticate:!1,menuOption:t,submenuOption:e})})});e=i.Lang.GroupsResources,a=i.Lang.ControlsResources,a={"Label.GroupFunds":e&&e["Label.GroupFunds"]||"Group Funds:","Action.GoToDetails":e&&e["Action.GoToDetails"]||"Go to Details","Action.BackToGroup":e&&e["Action.BackToGroup"]||"Back to Group","Message.UserIsOwner":e&&e["Message.UserIsOwner"]||"User is already the owner.","Heading.Allies":e&&e["Heading.Allies"]||"Allies","Heading.Enemies":e&&e["Heading.Enemies"]||"Enemies","Message.ConfigMetadataLoadFail":e&&e["Message.ConfigMetadataLoadFail"]||"Could not load group configuration metadata.","Heading.Information":e&&e["Heading.Information"]||"Information","Heading.Settings":e&&e["Heading.Settings"]||"Settings","Heading.SocialLinks":e&&e["Heading.SocialLinks"]||"Social Links","Heading.Revenue":e&&e["Heading.Revenue"]||"Revenue","Heading.Summary":e&&e["Heading.Summary"]||"Summary","Heading.AddFunds":e&&e["Heading.AddFunds"]||"Add Funds","Heading.Transactions":e&&e["Heading.Transactions"]||"Transactions","Heading.Sales":e&&e["Heading.Sales"]||"Sales","Heading.Payouts":e&&e["Heading.Payouts"]||"Payouts","Heading.Members":e&&e["Heading.Members"]||"Members","Heading.Roles":e&&e["Heading.Roles"]||"Roles","Heading.Affiliates":e&&e["Heading.Affiliates"]||"Affiliates","Heading.AuditLog":e&&e["Heading.AuditLog"]||"Audit Log","Label.AllowDeclarations":e&&e["Label.AllowDeclarations"]||"Allow enemy declarations","Label.FundsVisible":e&&e["Label.FundsVisible"]||"Group funds publicly visible","Label.GamesVisible":e&&e["Label.GamesVisible"]||"Group games are visible on the group home page","Label.MustBeAccepted":e&&e["Label.MustBeAccepted"]||"User requests must be accepted to join group","Label.NoLongerModify":e&&e["Label.NoLongerModify"]||"If you turn this setting off, you will no longer be able to modify it","Label.PremiumOnly":e&&e["Label.PremiumOnly"]||"Premium Only","Message.SettingUpdated":e&&e["Message.SettingUpdated"]||"Setting successfully updated","Message.SettingFail":e&&e["Message.SettingFail"]||"Unable to update setting","Heading.JoinRequirements":e&&e["Heading.JoinRequirements"]||"Join Requirements","Heading.GroupProfile":e&&e["Heading.GroupProfile"]||"Group Profile","Message.LoadSettingsFail":e&&e["Message.LoadSettingsFail"]||"Unable to load group settings.","Label.Ownership":e&&e["Label.Ownership"]||"Ownership","Label.ChangeGroupOwner":e&&e["Label.ChangeGroupOwner"]||"Change the group's owner","Label.Username":e&&e["Label.Username"]||"Username","Label.SelectNewOwner":e&&e["Label.SelectNewOwner"]||"Please select the new group owner","Description.ChangeOwnerWarning":e&&e["Description.ChangeOwnerWarning"]||"This is a permanent change and you will lose all of the privileges of group ownership.","Label.ViewWall":e&&e["Label.ViewWall"]||"View group wall","Label.ViewStatus":e&&e["Label.ViewStatus"]||"View group status","Label.PostToWall":e&&e["Label.PostToWall"]||"Post on group wall","Label.PostToStatus":e&&e["Label.PostToStatus"]||"Post group status","Label.DeleteFromWall":e&&e["Label.DeleteFromWall"]||"Delete group wall posts","Label.InviteMembers":e&&e["Label.InviteMembers"]||"Accept join requests","Label.RemoveMembers":e&&e["Label.RemoveMembers"]||"Kick lower-ranked members","Label.ChangeRanks":e&&e["Label.ChangeRanks"]||"Manage lower-ranked member ranks","Label.ManageRelationships":e&&e["Label.ManageRelationships"]||"Manage allies and enemies","Label.CreateItem":e&&e["Label.CreateItem"]||"Create group items","Label.ManageItems":e&&e["Label.ManageItems"]||"Configure group items","Label.AdvertiseGroup":e&&e["Label.AdvertiseGroup"]||"Advertise the group","Label.SpendGroupFund":e&&e["Label.SpendGroupFund"]||"Spend group funds","Label.ManageGroupGames":e&&e["Label.ManageGroupGames"]||"Create and edit group games","Label.ViewAuditLogs":e&&e["Label.ViewAuditLogs"]||"View audit log","Label.UseGroupFunds":e&&e["Label.UseGroupFunds"]||"Use group funds to purchase this role","Label.PermDeleteRole":e&&e["Label.PermDeleteRole"]||"Permanently delete this role","Message.DeleteRoleset":e&&e["Message.DeleteRoleset"]||"Are you sure you want to delete {role}?","Message.RoleDeleteSuccess":e&&e["Message.RoleDeleteSuccess"]||"Role successfully deleted.","Message.RoleDeleteFail":e&&e["Message.RoleDeleteFail"]||"Unable to delete role.","Message.RoleUpdateSuccess":e&&e["Message.RoleUpdateSuccess"]||"Role successfully updated.","Message.RoleUpdateFail":e&&e["Message.RoleUpdateFail"]||"Unable to update role.","Message.PermissionUpdateSuccess":e&&e["Message.PermissionUpdateSuccess"]||"Permission successfully updated.","Message.PermissionUpdateFail":e&&e["Message.PermissionUpdateFail"]||"Unable to update permission.","Message.RankReserved":e&&e["Message.RankReserved"]||"Ranks must be between {minRankPlusOne} and {maxRankMinusOne}. {minRank} and {maxRank} are reserved for guests and the owner.","Message.PurchaseRole":e&&e["Message.PurchaseRole"]||"Purchasing a new role will cost {cost}","Message.TransactionsBalance":e&&e["Message.TransactionsBalance"]||"Your balance after this transaction will be {balance}","Message.NameFieldEmpty":e&&e["Message.NameFieldEmpty"]||"The name field cannot be empty","Message.NotEnoughFunds":e&&e["Message.NotEnoughFunds"]||"You do not have enough funds to purchase this role","Message.RoleWithUsers":e&&e["Message.RoleWithUsers"]||"There {amount, plural, =0 {are # users} =1 {is # user} other {are # users}} in this role. You cannot delete a role with users","Message.MaxRoles":e&&e["Message.MaxRoles"]||"A maximum of 20 roles are allowed.","Action.DeleteRole":e&&e["Action.DeleteRole"]||"Delete Role","Action.CreateRole":e&&e["Action.CreateRole"]||"Create Role","Heading.PostsPermissions":e&&e["Heading.PostsPermissions"]||"Posts","Heading.MembershipPermissions":e&&e["Heading.MembershipPermissions"]||"Members","Heading.EconomyPermissions":e&&e["Heading.EconomyPermissions"]||"Assets","Heading.ManagementPermissions":e&&e["Heading.ManagementPermissions"]||"Miscellaneous","Heading.Requests":e&&e["Heading.Requests"]||"Requests","Heading.RemoveAlly":e&&e["Heading.RemoveAlly"]||"Remove Ally","Heading.RemoveEnemy":e&&e["Heading.RemoveEnemy"]||"Remove Enemy","Description.RemoveAlly":e&&e["Description.RemoveAlly"]||"Are you sure you want to remove this group as an ally?","Description.RemoveEnemy":e&&e["Description.RemoveEnemy"]||"Are you sure you want to remove this group as an enemy?","Description.EnterGroupName":e&&e["Description.EnterGroupName"]||"Enter the group name","Message.AllyRequestSent":e&&e["Message.AllyRequestSent"]||"Ally request sent to {group}","Message.UnableToLoadAllyRequests":e&&e["Message.UnableToLoadAllyRequests"]||"Unable to load ally requests","Message.NoAllyRequests":e&&e["Message.NoAllyRequests"]||"No ally requests","Message.UnableToAcceptAllRequests":e&&e["Message.UnableToAcceptAllRequests"]||"Unable to accept all requests. Please try again.","Message.UnableToDeclineAllRequests":e&&e["Message.UnableToDeclineAllRequests"]||"Unable to decline all requests. Please try again.","Message.UnableToRemoveAffiliate":e&&e["Message.UnableToRemoveAffiliate"]||"Unable to remove group affiliate.","Label.Members":e&&e["Label.Members"]||"{memberCount, plural, =0 {# Members} =1 {# Member} other {# Members}}","Label.SendAllyRequest":e&&e["Label.SendAllyRequest"]||"Send Ally Request","Label.DeclareEnemy":e&&e["Label.DeclareEnemy"]||"Declare Enemy","Label.GroupName":e&&e["Label.GroupName"]||"Group Name","Label.EnemyDeclarationsNotEnabled":e&&e["Label.EnemyDeclarationsNotEnabled"]||"Enemy declarations are not enabled. Please update your settings if you would like to enable this feature.","Action.Request":e&&e["Action.Request"]||"Request","Label.SearchMembers":e&&e["Label.SearchMembers"]||"Search Members","Message.NoPendingRequests":e&&e["Message.NoPendingRequests"]||"There are no pending member requests.","Message.UnableToUpdateRole":e&&e["Message.UnableToUpdateRole"]||"Unable to update the user's role.","Message.SuccessfullyUpdatedRole":e&&e["Message.SuccessfullyUpdatedRole"]||"Successfully updated user's role","Message.MemberNotFound":e&&e["Message.MemberNotFound"]||"Member does not exist within this role.","Message.LoadAuditLogsError":e&&e["Message.LoadAuditLogsError"]||"Unable to load audit logs.","Message.NoRecordsFound":e&&e["Message.NoRecordsFound"]||"No records found.","Action.DeclineAll":a&&a["Action.DeclineAll"]||"Decline All","Action.AcceptAll":a&&a["Action.AcceptAll"]||"Accept All","Action.Decline":a&&a["Action.Decline"]||"Decline","Action.Accept":a&&a["Action.Accept"]||"Accept","Action.Send":a&&a["Action.Send"]||"Send","Action.Cancel":a&&a["Action.Cancel"]||"Cancel","Action.Remove":a&&a["Action.Remove"]||"Remove","Label.Name":a&&a["Label.Name"]||"Name","Action.Collapse":a&&a["Action.Collapse"]||"Collapse","Action.Show":a&&a["Action.Show"]||"Show"};i.Lang.GroupsResources&&(r.setLanguageKeysFromFile(i.Lang.GroupsResources),r.setLanguageKeysFromFile(a))}]);t.Z=r},9586:function(e,t,n){"use strict";n.r(t);var r={groupBadgeAuditType:{enabledBadge:0,disabledBadge:1,updatedBadgeNameDescription:2},actionTypes:{deletePost:"Delete Post",removeMember:"Remove Member",acceptJoinRequest:"Accept Join Request",declineJoinRequest:"Decline Join Request",postStatus:"Post Status",changeRank:"Change Rank",buyAd:"Buy Ad",sendAllyRequest:"Send Ally Request",createEnemy:"Create Enemy",acceptAllyRequest:"Accept Ally Request",declineAllyRequest:"Decline Ally Request",deleteAlly:"Delete Ally",deleteEnemy:"Delete Enemy",addGroupPlace:"Add Group Place",deleteGroupPlace:"Remove Group Place",createItems:"Create Items",configureItems:"Configure Items",spendGroupFunds:"Spend Group Funds",changeOwner:"Change Owner",delete:"Delete",adjustCurrencyAmounts:"AdjustCurrencyAmounts",abandon:"Abandon",claim:"Claim",rename:"Rename",changeDescription:"Change Description",createAsset:"Create Group Asset",updateAsset:"Update Group Asset",configureAsset:"Configure Group Asset",revertAsset:"Revert Group Asset",createDeveloperProduct:"Create Group Developer Product",configureGame:"Configure Group Game",lock:"Lock",unlock:"Unlock",createGamePass:"Create Game Pass",createBadge:"Create Badge",configureBadge:"Configure Badge",savePlace:"Save Place",publishPlace:"Publish Place",inviteToClan:"Invite to Clan",kickFromClan:"Kick from Clan",cancelClanInvite:"Cancel Clan Invite",buyClan:"Buy Clan",updateRolesetRank:"Update Roleset Rank",updateRolesetData:"Update Roleset Data"},configureGroupAssetAction:["renamed","changed description","disabled","deactivated place","activated place","changed settings","enabled"],configureGroupGameAction:["updated settings","renamed","changed description","set root place","unrooted place","added place","removed place","changed studio access"],currencyType:{robux:1,tix:2}};n(9683).Z.constant("auditLogConstants",r),t.default=r},6634:function(e,t,n){"use strict";n.r(t);var r=n(792),n=n(9683),r={pageSize:18,loadPageSize:50,urls:{groupMembersUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/users"),groupRelationshipsRequestsUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/relationships/{groupRelationshipType}/requests"),updateGroupDescriptionUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/description"),getAuditLogUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/audit-log"),changeOwnerUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/change-owner"),updateGroupIconUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/icon?groupId={groupId}"),getUserCurrencyUrl:"".concat(r.EnvironmentUrls.economyApi,"/v1/users/{userId}/currency"),createGroupRoleUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/rolesets/create"),updateGroupRoleUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/rolesets/{roleId}"),deleteGroupRoleUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/rolesets/{roleId}"),updateGroupRolePermissions:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/roles/{roleSetId}/permissions"),groupRelationshipUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/relationships/{groupRelationshipType}/{relatedGroupId}"),groupMemberRequestsUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/join-requests"),groupMemberRequestUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/join-requests/users/{userId}"),groupAffiliateRequestUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/relationships/{groupRelationshipType}/requests/{relatedGroupId}"),groupAffiliateRequestsUrl:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/relationships/{groupRelationshipType}/requests"),getAllGroupRolePermissions:"".concat(r.EnvironmentUrls.groupsApi,"/v1/groups/{groupId}/roles/permissions")},translations:{noAction:"Action.No",cancelAction:"Action.Cancel",buildGroupRolesListError:"Message.BuildGroupRolesListError",loadGroupError:"Message.LoadGroupError",loadGroupMetadataError:"Message.LoadGroupMetadataError",loadGroupsListError:"Message.LoadGroupMembershipsError",loadGroupMembershipError:"Message.LoadUserGroupMembershipError",defaultError:"Message.DefaultError",exileUserWarning:"Heading.ExileUserWarning",exileUserWarningText:"Description.ExileUserWarning",exileUserAction:"Action.Exile"},strings:{rankReservedError:"Ranks must be between {minRankPlusOne} and {maxRankMinusOne}. {minRank} and {maxRank} are reserved for guests and the owner."},permissions:{guestPermissions:{viewWall:!0,viewStatus:!0},deprecatedPermissions:{manageClan:!0,addGroupPlaces:!0,viewGroupPayouts:!0}},filterTerms:{all:-1},permissionTypeCollapseToggle:{nameOfOpen:"Action.Show",nameOfClose:"Action.Collapse"},groupSettings:{approvalRequired:"isApprovalRequired",enemiesAllowed:"areEnemiesAllowed",groupFundsVisible:"areGroupFundsVisible",groupGamesVisible:"areGroupGamesVisible"},menuOptionNames:{information:"information",settings:"settings",socialLinks:"socialLinks",revenue:"revenue",members:"members",roles:"roles",affiliates:"affiliates",auditLog:"auditLog"},submenuOptionNames:{summary:"summary",sales:"sales",payouts:"payouts",allies:"allies",enemies:"enemies",addFunds:"addFunds"},policies:{displayUploadGroupIcon:!1,displayGroupPrivacySettings:!1},menuOptions:[{name:"information",translationKey:"Heading.Information",submenuOptions:[]},{name:"settings",translationKey:"Heading.Settings",submenuOptions:[]},{name:"socialLinks",translationKey:"Heading.SocialLinks",submenuOptions:[]},{name:"revenue",translationKey:"Heading.Revenue",submenuOptions:[{name:"summary",translationKey:"Heading.Summary"},{name:"sales",translationKey:"Heading.Sales"},{name:"payouts",translationKey:"Heading.Payouts"},{name:"addFunds",translationKey:"Heading.AddFunds"}]},{name:"members",translationKey:"Heading.Members",submenuOptions:[]},{name:"roles",translationKey:"Heading.Roles",submenuOptions:[]},{name:"affiliates",translationKey:"Heading.Affiliates",submenuOptions:[{name:"allies",translationKey:"Heading.Allies"},{name:"enemies",translationKey:"Heading.Enemies"}]},{name:"auditLog",translationKey:"Heading.AuditLog",submenuOptions:[]}],roleSettings:{groupPostsPermissions:"Heading.PostsPermissions",groupMembershipPermissions:"Heading.MembershipPermissions",groupEconomyPermissions:"Heading.EconomyPermissions",groupManagementPermissions:"Heading.ManagementPermissions",viewWall:"Label.ViewWall",postToWall:"Label.PostToWall",deleteFromWall:"Label.DeleteFromWall",viewStatus:"Label.ViewStatus",postToStatus:"Label.PostToStatus",changeRank:"Label.ChangeRanks",inviteMembers:"Label.InviteMembers",removeMembers:"Label.RemoveMembers",manageRelationships:"Label.ManageRelationships",viewAuditLogs:"Label.ViewAuditLogs",spendGroupFunds:"Label.SpendGroupFund",advertiseGroup:"Label.AdvertiseGroup",createItems:"Label.CreateItem",manageItems:"Label.ManageItems",manageGroupGames:"Label.ManageGroupGames"}};n.Z.constant("configureGroupConstants",r),t.default=r},3147:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(n,e,r,t,a,o,i,s){var l=this;l.showModal=function(e,t,n){return a.open({titleText:e,bodyText:t,actionButtonShow:!0,actionButtonId:n,actionButtonText:o.get("Action.Remove"),neutralButtonText:o.get(r.translations.cancelAction)})},l.removeAffiliate=function(){angular.element(document.querySelector("body")).click();var e=l.isAlliesPage?o.get("Description.RemoveAlly"):o.get("Description.RemoveEnemy"),t=l.isAlliesPage?o.get("Heading.RemoveAlly"):o.get("Heading.RemoveEnemy");l.showModal(t,e,"remove-affiliate-button").result.then(function(){i.deleteGroupRelationship(l.groupId,l.relationshipType,l.affiliateGroup.id).then(function(e){l.reloadCurrentPage()},function(e){s.warning(o.get("Message.UnableToRemoveAffiliate")),n.debug("--deleteGroupRelationship-error---")})})};l.$onInit=function(){l.isAlliesPage=l.relationshipType===e.relationshipTypes.allies,l.thumbnailTypes=t.thumbnailTypes}}r.$inject=["$log","groupsConstants","configureGroupConstants","thumbnailConstants","modalService","languageResource","configureGroupAffiliatesService","systemFeedbackService"],n.Z.controller("configureGroupAffiliateCardController",r),t.default=r},3912:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,t,n){var r=this;r.acceptRequest=function(e){r.cardActive=!0,t.acceptAffiliateRequest(r.groupId,r.relationshipType,e).then(function(){r.reloadCurrentPage()},function(e){r.errorResponse(e)})},r.declineRequest=function(e){r.cardActive=!0,t.declineAffiliateRequest(r.groupId,r.relationshipType,e).then(function(){r.reloadCurrentPage()},function(e){r.errorResponse(e)})},r.errorResponse=function(e){r.cardActive=!1;var t="";e.forEach(function(e){t+=e.userFacingMessage}),n.warning(t)};r.$onInit=function(){r.thumbnailTypes=e.thumbnailTypes}}r.$inject=["thumbnailConstants","configureGroupAffiliatesService","systemFeedbackService"],n.Z.controller("configureGroupAffiliateRequestCardController",r),t.default=r},3361:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(t,n,e,r,a,o,i,s,l){var u=this;t.affiliateRequestsPager=r.createPager({cursorName:"startRowIndex",limitName:"maxRows",firstPageCursor:"0",pageSize:e.pageSize,loadPageSize:e.loadPageSize,getCacheKeyParameters:function(){return{groupId:u.groupId,groupRelationshipType:u.relationshipType}},getRequestUrl:function(){return n("formatString")(e.urls.groupRelationshipsRequestsUrl,{groupId:u.groupId,groupRelationshipType:u.relationshipType})},getNextPageCursorFromResponse:function(e){return!e.nextRowIndex||e.totalGroupCount<=e.nextRowIndex?null:e.nextRowIndex.toString()},getDataListFromResponse:function(n){return a(function(e,t){e(n.relatedGroups)})},loadSuccess:function(e){e.forEach(function(e){e.url=n("seoUrl")("groups",e.id,e.name)}),u.affiliateRequests=e,u.layout.isLoading=!1,u.loadAffiliateRequestsError=!1},loadError:function(){u.affiliateRequests=[],u.layout.isLoading=!1,u.loadAffiliateRequestsError=!0,o.debug(" ------ getGroupRelationships error -------")}}),u.acceptAllRequests=function(){var e=u.affiliateRequests.map(function(e){return e.id});i.acceptAffiliateRequests(u.groupId,u.relationshipType,e).then(function(e){t.affiliateRequestsPager.removeCurrentPage()},function(e){s.warning(l.get("Message.UnableToAcceptAllRequests"))})},u.declineAllRequests=function(){var e=u.affiliateRequests.map(function(e){return e.id});i.ignoreAffiliateRequests(u.groupId,u.relationshipType,e).then(function(e){t.affiliateRequestsPager.removeCurrentPage()},function(e){s.warning(l.get("Message.UnableToDeclineAllRequests"))})};u.$onInit=function(){u.layout={isLoading:!0},t.affiliateRequestsPager.loadFirstPage()}}r.$inject=["$scope","$filter","configureGroupConstants","cursorPaginationService","$q","$log","configureGroupAffiliatesService","systemFeedbackService","languageResource"],n.Z.controller("configureGroupAffiliateRequestsController",r),t.default=r},1111:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(t,n,e,r,a,o,i,s){var l=this;l.showAffiliateRequestModal=function(){var e={animation:!1,templateUrl:"send-affiliate-request-modal",controller:"sendAffiliateRequestModalController",resolve:{modalData:{currentGroupId:l.groupId,relationshipType:l.relationshipType,loadFirstPage:function(){t.affiliatesPager.loadFirstPage()}}}};i.open(e)},t.affiliatesPager=r.createPager({cursorName:"startRowIndex",limitName:"maxRows",firstPageCursor:"0",pageSize:e.pageSize,loadPageSize:e.loadPageSize,getCacheKeyParameters:function(){return{groupId:l.groupId,groupRelationshipType:l.relationshipType}},getRequestUrl:function(){return n("formatString")(s.urls.getGroupRelationships,{groupId:l.groupId,groupRelationshipType:l.relationshipType})},getNextPageCursorFromResponse:function(e){return!e.nextRowIndex||e.totalGroupCount<=e.nextRowIndex?null:e.nextRowIndex.toString()},getDataListFromResponse:function(n){return a(function(e,t){e(n.relatedGroups)})},loadSuccess:function(e){e.forEach(function(e){e.url=n("seoUrl")("groups",e.id,e.name)}),l.affiliates=e,l.layout.isLoading=!1},loadError:function(){l.affiliates=[],l.layout.isLoading=!1,l.loadAffiliatesError=!0,o.debug(" ------ getGroupRelationships error -------")}});l.$onInit=function(){l.layout={isLoading:!0},t.affiliatesPager.loadFirstPage()}}r.$inject=["$scope","$filter","configureGroupConstants","cursorPaginationService","$q","$log","$uibModal","groupsConstants"],n.Z.controller("configureGroupAffiliatesListController",r),t.default=r},9311:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(n,e,t,r,a,o,i,s,l,u,c){var g=this;g.filterType=function(e,t){g.query.action=t,n.pager.setPagingParameter("actionType",e),n.pager.loadFirstPage()},g.filterKeyword=function(){o.getUserIdsFromUsernames([g.query.keyword]).then(function(e){0<e.length?n.pager.setPagingParameter("userid",e[0].id):n.pager.setPagingParameter("userid",""),n.pager.loadFirstPage()})},g.getTranslations=function(){s.getTextResources().then(function(e){g.translationResources=e},function(){e.debug("Failed to load text resources.")})},n.pager=u.createPager({pageSize:a.pageSize,loadPageSize:a.loadPageSize,getCacheKeyParameters:function(e){return{actionType:e.actionType}},getRequestUrl:function(){return t("formatString")(a.urls.getAuditLogUrl,{groupId:g.groupId})},loadSuccess:function(n){n.forEach(function(e,t){e=i.formatDescription(e);n[t].formattedDescription=e}),g.logs=n},loadError:function(e){g.logs=[],e&&0<e.length?g.loadError=e[0].message:g.loadError=l.get("Message.LoadTransactionsError")}});g.$onInit=function(){g.logs=[],g.query={keyword:"",action:l.get("Label.All")},g.keyCodes=c,g.thumbnailTypes=r.thumbnailTypes,g.getTranslations(),n.pager.loadFirstPage()}}r.$inject=["$scope","$log","$filter","thumbnailConstants","configureGroupConstants","groupsService","auditLogService","translationService","languageResource","cursorPaginationService","keyCode"],n.Z.controller("auditLogController",r),t.default=r},8657:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,t,n,r,a,o,i,s,l){var u=this;u.showChangeOwnerModal=function(){var e={animation:!1,templateUrl:"change-owner-modal",controller:"changeOwnerModalController",resolve:{modalData:{groupId:u.group.id,groupName:u.group.name,metadata:u.metadata}}};a.open(e)},u.updateGroupDescription=function(){u.isLoading=!0,r.updateGroupDescription(u.group.id,u.group.description).then(function(e){u.group.description=e.newDescription,o.success("Successfully updated group description")},function(){n.debug("--updateGroupDescription-error---"),o.warning("Unable to update group description")}).finally(function(){u.isLoading=!1})},u.loadGroupIcon=function(){u.fileUploadInfo.fileSelected=!1,u.fileUploadInfo.previewSrc="",u.thumbnailState=e.thumbnailStates.pending,t.getThumbnailImage(e.thumbnailTypes.groupIcon,u.group.id,i.thumbnailSizes.large).then(function(e){u.thumbnailState=e.state,u.fileUploadInfo.previewSrc=e.imageUrl},function(){u.thumbnailState=e.thumbnailStates.error,n.debug("--getThumbnailImage-error---")})},u.reloadGroupIcon=function(){u.fileUploadInfo.fileSelected=!1,u.fileUploadInfo.previewSrc="",u.thumbnailState=e.thumbnailStates.pending,t.reloadThumbnailImage(e.thumbnailTypes.groupIcon,u.group.id,i.thumbnailSizes.large).then(function(e){u.thumbnailState=e.state,u.fileUploadInfo.previewSrc=e.imageUrl},function(){u.thumbnailState=e.thumbnailStates.error,n.debug("--reloadThumbnailImage-error---")})},u.updateGroupIcon=function(){r.updateGroupIcon(u.group.id,u.fileUploadInfo.file).then(function(){o.success("Successfully updated group icon"),u.reloadGroupIcon()},function(){o.warning("Unable to update group icon"),n.debug("--getGroupIcon-error---")})},u.loadConfigureGroupPolicies=function(){u.policies={},u.metadata.isDefaultEmblemPolicyEnabled?l.getConfigureGroupRules().then(function(e){u.policies=e},function(){n.debug("--loadConfigureGroupPolicies-error---")}):Object.keys(s.policies).forEach(function(e){u.policies[e]=!0})};u.$onInit=function(){u.loadConfigureGroupPolicies(),u.thumbnailTypes=e.thumbnailTypes,u.fileUploadInfo={allowedFileTypes:i.groupIconFileTypes,maxFileSizeInMegabytes:u.metadata.groupConfiguration.iconMaxFileSizeMb},u.loadGroupIcon()}}r.$inject=["thumbnailConstants","thumbnailService","$log","configureGroupService","$uibModal","systemFeedbackService","groupsConstants","configureGroupConstants","groupsService"],n.Z.controller("configureGroupInformationController",r),t.default=r},6451:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e){var t=this;e.$on("ngRepeatFinished",function(e){t.resetVerticalMenu=!0});t.$onInit=function(){t.resetVerticalMenu=!1}}r.$inject=["$scope"],n.Z.controller("configureGroupMenuController",r),t.default=r},8453:function(e,t,n){"use strict";n.r(t);var m=n(792),n=n(9683);function r(r,a,n,o,i,s,l,e,u,c,g){var d=this;d.doesGroupHaveOwner=function(){return d.group.owner&&0<d.group.owner.userId},d.displayGroupFunds=function(){return d.group.permissions&&d.group.permissions.groupEconomyPermissions&&d.group.permissions.groupEconomyPermissions.spendGroupFunds},d.profilePageUrl=function(e){return o.profilePageUrl(e)},d.loadGroup=function(e){return a.getGroup(e).then(function(e){e&&(d.group.description=e.description,d.group.memberCount=e.memberCount,d.group.name=e.name,d.group.owner=e.owner,d.detailsPageUrl=o.groupDetailsPageUrl(d.group.id,e.name),d.group[r.groupSettings.approvalRequired]=!e.publicEntryAllowed)},function(e){d.layout.pageError=s.get(c.translations.loadGroupError),i.debug("--loadGroup-error---")})},d.loadGroupMembership=function(e){return u(function(t,n){g.getGroupMembership(e).then(function(e){e&&(e.userRole&&(d.group.role=e.userRole.role),e.permissions&&(d.group.permissions=e.permissions),d.group[r.groupSettings.groupFundsVisible]=e.areGroupFundsVisible,d.group[r.groupSettings.enemiesAllowed]=e.areEnemiesAllowed,d.group[r.groupSettings.groupGamesVisible]=e.areGroupGamesVisible),t(e)},function(e){d.layout.pageError=s.get(c.translations.loadGroupMembershipError),i.debug("--loadGroupMembership-error---"),n(e)})})},d.loadConfigurationMetadata=function(){return u(function(t,n){a.getGroupConfigurationMetadata().then(function(e){e&&(d.metadata=e),d.metadata.isPhone=m.DeviceMeta&&(0,m.DeviceMeta)().isPhone,d.metadata.isApp=m.DeviceMeta&&(0,m.DeviceMeta)().isInApp,t(e)},function(e){d.layout.pageError=s.get(c.translations.loadGroupConfigMetadataError),i.debug("--loadConfigurationMetadata-error---"),n(e)})})},d.loadGroupCurrency=function(){return u(function(t,n){d.displayGroupFunds()||t(),a.getGroupCurrency(d.group.id).then(function(e){d.groupFunds=e,t(e)},function(e){i.debug("--loadGroupCurrency-error---"),n(e)})})};function p(e){!d.menuOptionNameValidity[e.menuOption.name]||e.submenuOption&&!d.submenuOptionNameValidity[e.submenuOption.name]?(d.currentMenuOption=d.menuOptions[0],d.currentSubmenuOption=d.submenuOptions?d.submenuOptions[0]:void 0,l.path(d.currentMenuOption.name).replace()):(d.currentMenuOption=e.menuOption,d.currentSubmenuOption=e.submenuOption)}e.$on("$stateChangeSuccess",function(e,t){d.menuOptions?p(t):n.loadGroupMenuOptions(d.group.id).then(function(e){d.menuOptions=e.menuOptions,d.menuOptionNameValidity=e.menuOptionNameValidity,d.submenuOptionNameValidity=e.submenuOptionNameValidity,p(t)},function(e){i.debug("Unable to build menu")})});d.$onInit=function(){d.group={id:o.parseGroupId(l.absUrl())},d.layout={},d.menuOptionNames=r.menuOptionNames,d.submenuOptionNames=r.submenuOptionNames,d.relationshipTypes=c.relationshipTypes,d.loadGroup(d.group.id);var e=d.loadGroupMembership(d.group.id),t=d.loadConfigurationMetadata();u.all([e,t]).then(function(){d.layout.isLoadFinished=!0,d.loadGroupCurrency()},function(){i.debug("--error waiting for membershipPromise and metadataPromise---")})}}r.$inject=["configureGroupConstants","groupsService","configureGroupService","configureGroupUtilityService","$log","languageResource","$location","$scope","$q","groupsConstants","groupMembershipService"],n.Z.controller("configureGroupPageController",r),t.default=r},9716:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(a,e,t,n,o,r,i,s,l){var u=this;u.showDeleteRoleModal=function(){s.open({titleText:l.get("Action.DeleteRole"),bodyText:e("escapeHtml")(l.get("Message.DeleteRoleset",{role:u.groupRole.name})),actionButtonShow:!0,actionButtonText:l.get("Action.Delete"),neutralButtonText:l.get("Action.Cancel")}).result.then(function(){o.deleteRole(u.group.id,u.groupRole.id).then(function(){i.success(l.get("Message.RoleDeleteSuccess")),u.deleteRole()},function(e){i.warning(l.get("Message.RoleDeleteFail")),a.debug("--buildGroupRolesList-error---")})})},u.updateRole=function(){o.updateRole(u.group.id,u.groupRole.id,u.data.newName,u.data.newDescription,u.data.newRank).then(function(e){i.success(l.get("Message.RoleUpdateSuccess")),u.groupRole.name=u.data.newName,u.groupRole.description=e.description,u.groupRole.rank=u.data.newRank,u.setupRoleData()},function(e){i.warning(l.get("Message.RoleUpdateFail")),a.debug("--buildGroupRolesList-error---")})},u.togglePermissionValue=function(t,n){var e,r;u.isImmutablePermission(t,n)||(u.permissions[t][n]=!u.permissions[t][n],e=u.permissions[t][n],(r={})[n]=e,r={permissions:r},o.updateGroupRolePermissions(u.group.id,u.groupRole.id,r).then(function(e){i.success(l.get("Message.PermissionUpdateSuccess"))},function(e){a.debug("--updateGroupRoleSetPermissions-error---"),u.permissions[t][n]=!u.permissions[t][n],i.warning(l.get("Message.PermissionUpdateFail"))}))},u.isImmutablePermission=function(e,t){if(!u.layout.isOwner)return!0;if(u.layout.isOwnerRole)return!0;if(u.layout.isGuestRole){if(r.permissions.guestPermissions[t])return!1;if(!u.permissions[e][t])return!0}return!1},u.isHiddenPermission=function(e){return!!r.permissions.deprecatedPermissions[e]},u.togglePermissionCategory=function(e){n.permissionCategoryToggleUtility.showPermissionType[e]=!n.permissionCategoryToggleUtility.showPermissionType[e]},u.permissionCategoryToggleLabel=function(e){return n.permissionCategoryToggleUtility.showPermissionType[e]?l.get(n.permissionCategoryToggleUtility.nameOfOpen):l.get(n.permissionCategoryToggleUtility.nameOfClose)},u.isPermissionCategoryShown=function(e){return!n.permissionCategoryToggleUtility.showPermissionType[e]},u.rankHasError=function(){return!u.layout.isGuestRole&&!u.layout.isOwnerRole&&(null===u.data.newRank?(u.layout.rankError="The rank field cannot be empty",!0):void 0===u.data.newRank?(u.layout.rankError="The value you have entered is invalid",!0):(u.data.newRank===u.metadata.roleConfiguration.minRank||u.data.newRank===u.metadata.roleConfiguration.maxRank)&&(u.layout.rankError=l.get("Message.RankReserved",{minRankPlusOne:u.metadata.roleConfiguration.minRank+1,maxRankMinusOne:u.metadata.roleConfiguration.maxRank-1,minRank:u.metadata.roleConfiguration.minRank,maxRank:u.metadata.roleConfiguration.maxRank}),!0))},u.isSaveButtonDisabled=function(){return!u.data.newName||u.rankHasError()||u.layout.isGuestRole},u.isNameFieldDisabled=function(){return!u.layout.isOwner||u.layout.isGuestRole},u.isDescriptionFieldDisabled=function(){return!u.layout.isOwner||u.layout.isGuestRole},u.isRankFieldDisabled=function(){return!u.layout.isOwner||u.layout.isOwnerRole||u.layout.isGuestRole},u.showSaveButton=function(){return u.layout.isOwner},u.showDeleteRole=function(){return u.layout.isOwner&&!(u.layout.isOwnerRole||u.layout.isGuestRole)},u.canDeleteRole=function(){return 0===u.groupRole.memberCount},u.setupRoleData=function(){u.data={newName:u.groupRole.name,newDescription:u.groupRole.description,newRank:u.groupRole.rank}};u.$onInit=function(){u.roleSettingsTranslations=r.roleSettings,u.setupRoleData(),u.layout={isGuestRole:u.groupRole.rank===u.metadata.roleConfiguration.minRank,isOwnerRole:u.groupRole.rank===u.metadata.roleConfiguration.maxRank,isOwner:u.group.role.rank===u.metadata.roleConfiguration.maxRank},u.updateGroupRolePermissionsRequest={permissions:{}}}}r.$inject=["$log","$filter","groupsService","configureGroupUtilityService","configureGroupRolesService","configureGroupConstants","systemFeedbackService","modalService","languageResource"],n.Z.controller("configureGroupRoleSettingsController",r),t.default=r},3839:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(t,n,r,a,e,o,i){var s=this;s.showCreateRoleModal=function(){var e={animation:!1,templateUrl:"create-role-modal",controller:"createRoleModalController",resolve:{modalData:{groupId:s.group.id,metadata:s.metadata,addRole:function(e){t.getGroupRolePermissions(s.group.id,e.id).then(function(e){s.roles.push(e),s.activateRole(e.role),s.reloadGroupFunds()})}}}};i.open(e)},s.canCreateRole=function(){return s.roles.length<s.metadata.roleConfiguration.limit},s.activateRole=function(e){s.activeRole.isActive=!1,e.isActive=!0,s.activeRole=e},s.deleteRoleAtIndex=function(e){s.activeRole.rank!==s.metadata.roleConfiguration.maxRank&&s.activeRole.rank!==s.metadata.roleConfiguration.minRank&&(s.activeRole=s.roles[e-1].role,s.activeRole.isActive=!0,s.roles.splice(e,1))},s.buildGroupRolesList=function(){o.getAllGroupRolePermissions(s.group.id).then(function(e){e.data&&1<e.data.length&&((e=e.data).sort(function(e,t){return t.role.rank-e.role.rank}),s.activeRole=e[0].role,s.activeRole.isActive=!0,s.roles=e)},function(e){s.layout.rolesError=r.get(a.translations.buildGroupRolesListError),n.debug("--buildGroupRolesList-error---")})};s.$onInit=function(){s.layout={isOwner:s.group.role.rank===s.metadata.roleConfiguration.maxRank},s.buildGroupRolesList()}}r.$inject=["groupsService","$log","languageResource","groupsConstants","systemFeedbackService","configureGroupRolesService","$uibModal"],n.Z.controller("configureGroupRolesController",r),t.default=r},2187:function(e,t,n){"use strict";function r(){this.$onInit=function(){}}n.r(t),n(9683).Z.controller("configureGroupSettingToggleController",r),t.default=r},4916:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(r,e,a,o,i){var s=this;s.loadSettings=function(){r.getGroupSettings(s.group.id).then(function(e){e&&(s.settings=e)},function(e){s.layout.settingsError=i.get("Message.LoadSettingsFail"),a.debug("--loadSettings-error---")})},s.changeSettingValue=function(t){s.settings[t]=!s.settings[t];var n=s.settings[t],e={};e[t]=n,r.updateGroupSettings(s.group.id,e).then(function(e){s.group[t]=n,o.success(i.get("Message.SettingUpdated"))},function(e){a.debug("--updateGroupSettings-error---"),s.settings[t]=!s.settings[t],o.warning(i.get("Message.SettingFail"))})},s.canManageRelationships=function(){return s.group.permissions.groupManagementPermissions.manageRelationships},s.loadConfigureGroupPolicies=function(){s.policies={},s.groupPoliciesLoading=!0,s.metadata.isDefaultEmblemPolicyEnabled?r.getConfigureGroupRules().then(function(e){s.policies=e},function(){a.debug("--loadConfigureGroupPolicies-error---")}):Object.keys(e.policies).forEach(function(e){s.policies[e]=!0}),s.groupPoliciesLoading=!1};s.$onInit=function(){s.loadConfigureGroupPolicies(),s.layout={isOwner:s.group.role.rank===s.metadata.roleConfiguration.maxRank},s.loadSettings()}}r.$inject=["groupsService","configureGroupConstants","$log","systemFeedbackService","languageResource"],n.Z.controller("configureGroupSettingsController",r),t.default=r},4724:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,t){var n=this;n.canExileUser=function(){return n.group.permissions.groupMembershipPermissions.removeMembers&&n.isHigherRankThanUser()},n.canChangeRankOfUser=function(){return n.group.permissions.groupMembershipPermissions.changeRank&&n.isHigherRankThanUser()},n.isHigherRankThanUser=function(){return n.group.role.rank>n.member.role.rank},n.profilePageUrl=function(){return t.profilePageUrl(n.member.userId)},n.setup=function(){n.isOwner=n.member.role.rank===n.metadata.roleConfiguration.maxRank,n.thumbnailTypes=e.thumbnailTypes,n.memberProfileUrl=n.profilePageUrl()};n.$onInit=function(){n.setup()}}r.$inject=["thumbnailConstants","configureGroupUtilityService"],n.Z.controller("configureGroupMemberCardController",r),t.default=r},1737:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,t,n){var r=this;r.acceptRequest=function(e){r.cardActive=!0,t.acceptMemberRequest(r.group.id,e).then(function(){r.reloadCurrentPage(),r.group.memberCount+=1},function(e){r.errorResponse(e)})},r.ignoreRequest=function(e){r.cardActive=!0,t.ignoreMemberRequest(r.group.id,e).then(function(){r.reloadCurrentPage()},function(e){r.errorResponse(e)})},r.errorResponse=function(e){r.cardActive=!1;var t="";e.forEach(function(e){t+="".concat(e.userFacingMessage," \n")}),n.warning(t)};r.$onInit=function(){r.thumbnailTypes=e.thumbnailTypes}}r.$inject=["thumbnailConstants","configureGroupMembersService","systemFeedbackService"],n.Z.controller("configureGroupMemberRequestCardController",r),t.default=r},5837:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(n,e,r,t,a,o,i,s,l){var u=this;u.getUserRequest=function(e){u.layout.isLoading=!0,u.requests=[],e?t.getUserIdsFromUsernames([e]).then(function(e){0<e.length?(e=e[0].id,r.getMemberRequest(u.group.id,e).then(function(e){var t;null!=e&&e.requester&&((t=e).requester=s.getNameForDisplay(e.requester),u.requests=[t])},function(e){u.errorResponse(e)}).finally(function(){u.layout.isLoading=!1})):u.layout.isLoading=!1},function(e){u.errorResponse(e),u.layout.isLoading=!1}):n.memberRequestsPager.loadFirstPage()},u.acceptAllRequests=function(){var t=u.requests.map(function(e){return e.requester.userId});r.acceptMemberRequests(u.group.id,t).then(function(e){n.memberRequestsPager.removeCurrentPage(),u.group.memberCount+=t.length},function(e){i.warning("Unable to accept all requests. Please try again.")})},u.declineAllRequests=function(){var e=u.requests.map(function(e){return e.requester.userId});r.ignoreMemberRequests(u.group.id,e).then(function(e){n.memberRequestsPager.removeCurrentPage()},function(e){i.warning("Unable to decline all requests. Please try again.")})},n.memberRequestsPager=o.createPager({pageSize:e.pageSize,loadPageSize:e.loadPageSize,getCacheKeyParameters:function(e){return{groupId:e.groupId}},getRequestUrl:function(){return a("formatString")(e.urls.groupMemberRequestsUrl,{groupId:u.group.id})},loadSuccess:function(e){e.forEach(function(e){var t=e.requester;t&&(e.requester=s.getNameForDisplay(t))}),u.requests=e,u.layout.isLoading=!1},loadError:function(e){u.errorResponse(e),u.layout.isLoading=!1}}),u.errorResponse=function(e){var t="";e.forEach(function(e){t+=e.userFacingMessage}),i.warning(t)};u.$onInit=function(){u.layout={isLoading:!0},u.keyCodes=l,u.keyword="",n.memberRequestsPager.loadFirstPage()}}r.$inject=["$scope","configureGroupConstants","configureGroupMembersService","groupsService","$filter","cursorPaginationService","systemFeedbackService","configureGroupUtilityService","keyCode"],n.Z.controller("configureGroupMemberRequestsController",r),t.default=r},9599:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e){var t=this;t.showRequests=function(){return t.group.permissions.groupMembershipPermissions.inviteMembers&&t.group[e.groupSettings.approvalRequired]}}r.$inject=["configureGroupConstants"],n.Z.controller("configureGroupMembersController",r),t.default=r},7053:function(e,t,n){"use strict";n.r(t);var f=n(792),n=n(9683);function r(a,o,i,t,e,n,s,r,l,u,c,g,d,p){var m=this;a.membersPager=n.createPager({sortOrder:n.sortOrder.Desc,pageSize:i.pageSize,loadPageSize:i.loadPageSize,getCacheKeyParameters:function(){return m.isAllRoles()?{groupId:m.group.id}:{groupId:m.group.id,roleId:m.currentRoleFilter.id}},getRequestUrl:function(){return m.isAllRoles()?e("formatString")(i.urls.groupMembersUrl,{groupId:m.group.id}):e("formatString")(l.urls.getGroupRoleMembers,{groupId:m.group.id,roleId:m.currentRoleFilter.id})},loadSuccess:function(e){m.isAllRoles()?m.members=e.map(function(e){var t=e.user,n=e.role,e=t,e=r.getNameForDisplay(t);return Object.assign(e,{role:n})}):m.members=e.map(function(e){var t=r.getNameForDisplay(e);return Object.assign(t,{role:m.currentRoleFilter})}),m.layout.isLoading=!1},loadError:function(){m.members=[],m.layout.isLoading=!1,m.loadMembersError=!0,t.debug(" ------ getGroupRoleMembers error -------")}}),m.buildGroupRolesList=function(e){o.getGroupRoles(e).then(function(e){e.roles&&1<e.roles.length&&((e=e.roles).sort(function(e,t){return e.rank-t.rank}),m.roles=e,m.configurableRoles=m.roles.filter(function(e){return e.rank<m.group.role.rank}))},function(e){u.warning(s.get(l.translations.buildGroupRolesListError)),t.debug("--buildGroupRolesList-error---")})},m.canDeleteWallPostOfUser=function(e){return m.group.permissions.groupPostsPermissions.deleteFromWall&&m.isHigherRankThanUser(e)},m.isHigherRankThanUser=function(e){return m.group.role.rank>e.role.rank},m.showExileUserModal=function(t,e){angular.element(document.querySelector("body")).click();var n={animation:!1,templateUrl:p.modals.exileUser.templateUrl,controller:p.modals.exileUser.controller,resolve:{modalData:{groupId:m.group.id,userId:t.userId,showDeletePostsCheckbox:m.canDeleteWallPostOfUser(t),refreshGroupWall:angular.noop,reloadCurrentPage:function(){m.group.memberCount=m.group.memberCount-1,--m.roles.filter(function(e){return e.id===t.role.id})[0].memberCount,a.membersPager.removeItemAtIndex(e)}}}};d.open(n)},m.updateUserRole=function(t,n,r){t.role.id!==n.id&&g.updateUserRole(m.group.id,t.userId,n.id).then(function(e){--m.roles.filter(function(e){return e.id===t.role.id})[0].memberCount,n.memberCount+=1,t.role=n,m.isAllRoles()||a.membersPager.removeItemAtIndex(r),u.success(s.get("Message.SuccessfullyUpdatedRole"))},function(e){u.warning(s.get("Message.UnableToUpdateRole"))})},m.profilePageUrl=function(e){return r.profilePageUrl(e)},m.updateRoleFilter=function(e){m.keyword="",m.layout.isSearchResult=!1,m.layout.memberSearchError=null,m.currentRoleFilter=e,m.members=[],m.layout.isLoading=!0,a.membersPager.loadFirstPage()},m.isAllRoles=function(){return m.currentRoleFilter.id===i.filterTerms.all},m.getMember=function(e){if(m.layout.memberSearchError=null,!e)return a.membersPager.loadFirstPage(),void(m.layout.isSearchResult=!1);m.members=[],m.layout.isLoading=!0,m.layout.isSearchResult=!0,o.getUserIdsFromUsernames([e]).then(function(e){var t,n,r;0<e.length?(t=e[0].id,n=e[0].name,r=e[0].displayName,o.getUserRoleInGroup(t,m.group.id).then(function(e){null==e||e.id!==m.currentRoleFilter.id&&m.currentRoleFilter.id!==i.filterTerms.all?m.layout.memberSearchError=null==e?s.get("Message.TargetUserNotInGroup"):s.get("Message.MemberNotFound"):m.members=[{userId:t,username:n,role:e,nameForDisplay:f.DisplayNames.Enabled()?r:n}]},function(e){m.layout.memberSearchError=e}).finally(function(){m.layout.isLoading=!1})):(m.layout.memberSearchError=s.get("Message.InvalidUser"),m.layout.isLoading=!1)},function(){m.layout.isLoading=!1})};m.$onInit=function(){m.layout={isLoading:!0,isSearchResult:!1},m.keyCodes=c,m.keyword="",m.allRolesFilter={id:i.filterTerms.all,name:s.get("Label.All")},m.updateRoleFilter(m.allRolesFilter),m.buildGroupRolesList(m.group.id)}}r.$inject=["$scope","groupsService","configureGroupConstants","$log","$filter","cursorPaginationService","languageResource","configureGroupUtilityService","groupsConstants","systemFeedbackService","keyCode","configureGroupMembersService","$uibModal","groupResources"],n.Z.controller("configureGroupMembersListController",r),t.default=r},469:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,a,t,n,r,o,i,s,l,u,c,g,d){a.params=o,a.changeOwner=function(){a.layout.errorMessage=void 0,a.layout.isLoading=!0,s.changeOwner(a.params.groupId,a.newOwner.id).then(function(e){r.location.href=l.groupDetailsPageUrl(a.params.groupId,a.params.groupName)},function(e){e.errors&&0<e.errors.length?g.warning(e.errors[0].userFacingMessage):g.warning(u.get(d.translations.defaultError)),n.debug("--changeOwner-error---"),a.layout.isLoading=!1,t.dismiss()})},a.selectUser=function(r){return e(function(t,n){a.newOwner={},a.layout.isLoadingUser=!0,i.getUserRoleInGroup(r.id,a.params.groupId).then(function(e){e?e.rank===a.params.metadata.roleConfiguration.maxRank?n(u.get("Message.UserIsOwner")):(a.newOwner.role=e.name,a.newOwner.id=r.id,a.newOwner.name=r.name,a.newOwner.url=l.profilePageUrl(r.id),t()):n(u.get("Message.TargetUserNotInGroup"))},function(e){n(e)}).finally(function(){a.layout.isLoadingUser=!1})})},a.close=function(){t.dismiss()},a.init=function(){a.thumbnailTypes=c.thumbnailTypes,a.newOwner={},a.layout={}},a.init()}r.$inject=["$q","$scope","$uibModalInstance","$log","$window","modalData","groupsService","changeOwnerService","configureGroupUtilityService","languageResource","thumbnailConstants","systemFeedbackService","groupsConstants"],n.Z.controller("changeOwnerModalController",r),t.default=r},8928:function(e,t,n){"use strict";n.r(t);var r=n(9683),i=n(792);function a(t,n,r,e,a,o){t.params=e,t.createRole=function(){t.layout.errorMessage=null,t.layout.isLoading=!0,a.createRole(t.params.groupId,t.newRole.name,t.newRole.description,t.newRole.rank,t.layout.isUsingGroupFunds).then(function(e){t.params.addRole(e),n.close()},function(e){r.debug("--createRole-error---");e=e.errors?e.errors[0]:{};t.layout.errorMessage=e.message,t.layout.isLoading=!1})};t.toggleIsUsingGroupFunds=function(){t.layout.isUsingGroupFunds=!t.layout.isUsingGroupFunds,t.layout.remainingFunds=t.layout.isUsingGroupFunds?t.layout.groupFunds-t.params.metadata.roleConfiguration.cost:t.layout.userFunds-t.params.metadata.roleConfiguration.cost},t.close=function(){n.dismiss()},t.init=function(){t.layout={isUsingGroupFunds:!1,newRoleMinRank:t.params.metadata.roleConfiguration.minRank+1,newRoleMaxRank:t.params.metadata.roleConfiguration.maxRank-1},o.getGroupCurrency(t.params.groupId).then(function(e){t.layout.groupFunds=e},function(e){r.debug("--loadGroupCurrency-error---")}),a.getUserCurrency(i.CurrentUser.userId).then(function(e){t.layout.userFunds=e,t.layout.remainingFunds=e-t.params.metadata.roleConfiguration.cost},function(e){r.debug("--loadUserCurrency-error---")})},t.init()}a.$inject=["$scope","$uibModalInstance","$log","modalData","configureGroupRolesService","groupsService"],r.Z.controller("createRoleModalController",a),t.default=a},4974:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(t,r,e,a,o,n,i,s,l,u){r.params=n,r.close=function(){e.dismiss()},r.selectGroup=function(e){return t(function(t,n){r.group={},r.layout.isLoadingGroup=!0,a.getGroup(e.id).then(function(e){Object.assign(r.group,e),t()},function(e){0===e.errors[0].code?n(l.get(o.translations.defaultError)):n(e.errors[0].message)}).finally(function(){r.layout.isLoadingGroup=!1})})},r.doesGroupHaveOwner=function(){return r.group&&null!==r.group.owner&&0<r.group.owner.userId},r.isAlliesPage=function(){return r.data.relationshipType===o.relationshipTypes.allies},r.modalButtonText=function(){return r.isAlliesPage()?l.get("Action.Request"):l.get("Action.Send")},r.modalTitleText=function(){return r.isAlliesPage()?l.get("Label.SendAllyRequest"):l.get("Label.DeclareEnemy")},r.createGroupRelationship=function(){i.createGroupRelationship(r.params.currentGroupId,r.data.relationshipType,r.group.id).then(function(e){r.isAlliesPage()?u.success(l.get("Message.AllyRequestSent",{group:r.group.name})):r.params.loadFirstPage()},function(e){u.warning(e.errors[0].message)}).finally(function(){e.dismiss()})},r.init=function(){r.thumbnailTypes=s.thumbnailTypes,r.data={relationshipType:r.params.relationshipType},r.layout={},r.group={}},r.init()}r.$inject=["$q","$scope","$uibModalInstance","groupsService","groupsConstants","modalData","configureGroupAffiliatesService","thumbnailConstants","languageResource","systemFeedbackService"],n.Z.controller("sendAffiliateRequestModalController",r),t.default=r},6283:function(e,t,n){"use strict";n.r(t);var h=n(792),n=n(9683);function r(p,m,f,b){function v(e,t,n){switch(n){case"games":case"catalog":case"groups":case"game-pass":case"badges":return'<a class="text-link" href="'.concat(f("seoUrl")(n,e,t),'">').concat(f("escapeHtml")(t),"</a>");case"profile":return'<a class="text-link" href="'.concat(f("seoUrl")("users",e,"profile"),'">').concat(f("escapeHtml")(t),"</a>");case"universe":return'<a class="text-link" href="/universes/configure?id='.concat(e,'">').concat(f("escapeHtml")(t),"</a>")}}return{formatDescription:function(e){var t,n,r=e.actor.user,a=r.userId,o=r.username,i=r.displayName,s=v(a,h.DisplayNames.Enabled()?i:o,"profile"),l='<span class="icon-robux-16x16"></span>',o=p.actionTypes;switch(e.actor.user=b.getNameForDisplay(r),e.actionType){case o.removeMember:return m.get("Message.RemoveMember",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.deletePost:return m.get("Message.DeletePost",{actor:s,postDesc:f("escapeHtml")(e.description.PostDesc),user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.acceptJoinRequest:return m.get("Message.AcceptJoinRequest",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.declineJoinRequest:return m.get("Message.DeclineJoinRequest",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.postStatus:return m.get("Message.PostStatus",{actor:s,groupStatus:f("escapeHtml")(e.description.Text)});case o.changeRank:return m.get("Message.ChangeRank",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile"),oldRoleSet:f("escapeHtml")(e.description.OldRoleSetName),newRoleSet:f("escapeHtml")(e.description.NewRoleSetName)});case o.buyAd:return m.get("Message.BuyAd",{actor:s,bid:e.description.CurrencyTypeId===p.currencyType.robux?"".concat(l).concat(f("number")(e.description.Bid)):"".concat(f("number")(e.description.Bid)," tickets"),adName:f("escapeHtml")(e.description.AdName)});case o.sendAllyRequest:return m.get("Message.SendAllyRequest",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.createEnemy:return m.get("Message.CreateEnemy",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.acceptAllyRequest:return m.get("Message.AcceptAllyRequest",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.declineAllyRequest:return m.get("Message.DeclineAllyRequest",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.deleteAlly:return m.get("Message.DeleteAlly",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.deleteEnemy:return m.get("Message.DeleteEnemy",{actor:s,group:v(e.description.TargetGroupId,e.description.TargetGroupName,"groups")});case o.addGroupPlace:return m.get("Message.AddGroupPlace",{actor:s,game:v(e.description.AssetId,e.description.AssetName,"games")});case o.deleteGroupPlace:return m.get("Message.DeleteGroupPlace",{actor:s,game:v(e.description.AssetId,e.description.AssetName,"games")});case o.createItems:return m.get("Message.CreateItems",{actor:s,item:v(e.description.AssetId,e.description.AssetName,"catalog")});case o.configureItems:return m.get("Message.ConfigureItems",{actor:s,item:v(e.description.AssetId,e.description.AssetName,"catalog")});case o.changeOwner:return null!=e.description.NewOwnerId?m.get("Message.ChangeOwner",{actor:s,user:v(e.description.NewOwnerId,e.description.NewOwnerName,"profile")}):m.get("Message.ChangeOwnerEmpty");case o.rename:return m.get("Message.Rename",{actor:s,newName:f("escapeHtml")(e.description.NewName)});case o.delete:return m.get("Message.Delete",{actor:s});case o.adjustCurrencyAmounts:return 0<e.description.Amount?m.get("Message.AdjustCurrencyAmountsIncreased",{actor:s,amount:e.description.CurrencyType===p.currencyType.robux?"".concat(l).concat(f("number")(Math.abs(e.description.Amount))):"".concat(f("number")(Math.abs(e.description.Amount))," tickets")}):m.get("Message.AdjustCurrencyAmountsDecreased",{actor:s,amount:e.description.CurrencyType===p.currencyType.robux?"".concat(l).concat(f("number")(Math.abs(e.description.Amount))):"".concat(f("number")(Math.abs(e.description.Amount))," tickets")});case o.abandon:return m.get("Message.Abandon",{actor:s});case o.claim:return m.get("Message.Claim",{actor:s});case o.changeDescription:return m.get("Message.ChangeDescription",{actor:s,newDescription:f("escapeHtml")(e.description.NewDescription)});case o.spendGroupFunds:return m.get("Message.SpendGroupFunds",{actor:s,amount:e.description.CurrencyTypeId===p.currencyType.robux?"".concat(l).concat(f("number")(e.description.Amount)):"".concat(f("number")(e.description.Amount)," tickets"),item:f("escapeHtml")(e.description.ItemDescription)});case o.inviteToClan:return m.get("Message.InviteToClan",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.kickFromClan:return m.get("Message.KickFromClan",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.cancelClanInvite:return m.get("Message.CancelClanInvite",{actor:s,user:v(e.description.TargetId,e.description.TargetName,"profile")});case o.buyClan:return m.get("Message.BuyClan",{actor:s});case o.createAsset:return m.get("Message.CreateAsset",{actor:s,item:v(e.description.AssetId,e.description.AssetName,"catalog")});case o.updateAsset:return null!=e.description.RevertVersionNumber?m.get("Message.UpdateAssetRevert",{actor:s,item:v(e.description.AssetId,e.description.AssetName,"catalog"),version:e.description.VersionNumber,oldVersion:e.description.RevertVersionNumber}):m.get("Message.UpdateAsset",{actor:s,version:e.description.VersionNumber,item:v(e.description.AssetId,e.description.AssetName,"catalog")});case o.configureAsset:var u="";return null==e.description.Actions||0===e.description.Actions.length?u="configured asset":e.description.Actions.forEach(function(e){u+=p.configureGroupAssetAction[e]}),m.get("Message.ConfigureAsset",{actor:s,item:v(e.description.AssetId,e.description.AssetName,"catalog"),actions:u});case o.createDeveloperProduct:return m.get("Message.CreateDeveloperProduct",{actor:s,id:e.description.AssetId});case o.configureGame:u="";if(e.description.Actions.forEach(function(e){u+=p.configureGroupGameAction[e]}),1!==e.description.Type)return m.get("Message.ConfigureGameDeveloperProduct",{actor:s,id:e.description.TargetId,actions:u});var c=v(e.description.TargetId,e.description.TargetName,"universe");return m.get("Message.ConfigureGame",{actor:s,game:c,actions:u});case o.lock:return m.get("Message.Lock",{actor:s});case o.unlock:return m.get("Message.Unlock",{actor:s});case o.createGamePass:return m.get("Message.CreateGamePass",{actor:s,game:v(e.description.PlaceId,e.description.PlaceName,"games"),gamePass:v(e.description.GamePassId,e.description.GamePassName,"game-pass")});case o.createBadge:var g=v(e.description.BadgeId,e.description.BadgeName,"badges");return m.get("Message.CreateBadge",{actor:s,badge:g});case o.configureBadge:g=v(e.description.BadgeId,e.description.BadgeName,"badges");switch(e.description.Type){case p.groupBadgeAuditType.enabledBadge:return m.get("Message.ConfigureBadgeEnabled",{actor:s,badge:g});case p.groupBadgeAuditType.disabledBadge:return m.get("Message.ConfigureBadgeDisabled",{actor:s,badge:g});case p.groupBadgeAuditType.updatedBadgeNameDescription:return m.get("Message.ConfigureBadgeUpdate",{actor:s,badge:g})}case o.updateRolesetRank:return m.get("Message.UpdateRolesetRank",{actor:s,roleSetName:f("escapeHtml")(e.description.RoleSetName),oldRank:e.description.OldRank,newRank:e.description.NewRank});case o.updateRolesetData:var d=(t=e.description.OldName,d=e.description.NewName,n=e.description.OldDescription,c=e.description.NewDescription,n===c?"Message.UpdateRolesetDataNameOnly":t===d?"Message.UpdateRolesetDataDescOnly":"Message.UpdateRolesetData");return m.get(d,{actor:s,oldName:f("escapeHtml")(e.description.OldName),newName:f("escapeHtml")(e.description.NewName),oldDescription:f("escapeHtml")(e.description.OldDescription),newDescription:f("escapeHtml")(e.description.NewDescription)});default:return""}}}}r.$inject=["auditLogConstants","languageResource","$filter","configureGroupUtilityService"],n.Z.factory("auditLogService",r),t.default=r},5657:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(n,r,a){return{changeOwner:function(e,t){e={url:a("formatString")(r.urls.changeOwnerUrl,{groupId:e})},t={userId:t};return n.httpPost(e,t)}}}r.$inject=["httpService","configureGroupConstants","$filter"],n.Z.factory("changeOwnerService",r),t.default=r},8819:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(r,a,o){function i(e,t,n){return o("formatString")(a.urls.groupAffiliateRequestUrl,{groupId:e,groupRelationshipType:t,relatedGroupId:n})}function s(e,t){return o("formatString")(a.urls.groupAffiliateRequestsUrl,{groupId:e,groupRelationshipType:t})}function l(e,t,n){return o("formatString")(a.urls.groupRelationshipUrl,{groupId:e,groupRelationshipType:t,relatedGroupId:n})}return{createGroupRelationship:function(e,t,n){n={url:l(e,t,n)};return r.httpPost(n)},deleteGroupRelationship:function(e,t,n){n={url:l(e,t,n)};return r.httpDelete(n)},acceptAffiliateRequests:function(e,t,n){t={url:s(e,t)},n={groupIds:n};return r.httpPost(t,n)},ignoreAffiliateRequests:function(e,t,n){t={url:s(e,t),headers:{"Content-Type":"application/json"}},n={groupIds:n};return r.httpDelete(t,n)},acceptAffiliateRequest:function(e,t,n){n={url:i(e,t,n)};return r.httpPost(n)},declineAffiliateRequest:function(e,t,n){n={url:i(e,t,n)};return r.httpDelete(n)}}}r.$inject=["httpService","configureGroupConstants","$filter"],n.Z.factory("configureGroupAffiliatesService",r),t.default=r},2343:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(r,n,a,o){function i(e,t){return a("formatString")(n.urls.groupMemberRequestUrl,{groupId:e,userId:t})}function s(e){return a("formatString")(n.urls.groupMemberRequestsUrl,{groupId:e})}return{updateUserRole:function(e,t,n){t={url:a("formatString")(o.urls.updateUserRole,{groupId:e,userId:t})},n={roleId:n};return r.httpPatch(t,n)},acceptMemberRequests:function(e,t){e={url:s(e)},t={userIds:t};return r.httpPost(e,t)},ignoreMemberRequests:function(e,t){e={url:s(e),headers:{"Content-Type":"application/json"}},t={userIds:t};return r.httpDelete(e,t)},getMemberRequest:function(e,t){t={url:i(e,t)};return r.httpGet(t)},acceptMemberRequest:function(e,t){t={url:i(e,t)};return r.httpPost(t)},ignoreMemberRequest:function(e,t){t={url:i(e,t)};return r.httpDelete(t)}}}r.$inject=["httpService","configureGroupConstants","$filter","groupsConstants"],n.Z.factory("configureGroupMembersService",r),t.default=r},4054:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(o,i,s,t){return{createRole:function(e,t,n,r,a){a=4<arguments.length&&void 0!==a&&a,e={url:s("formatString")(i.urls.createGroupRoleUrl,{groupId:e})},a={name:t,description:n,rank:r,usingGroupFunds:a};return o.httpPost(e,a)},updateRole:function(e,t,n,r,a){t={url:s("formatString")(i.urls.updateGroupRoleUrl,{groupId:e,roleId:t})},a={name:n,description:r,rank:a};return o.httpPatch(t,a)},deleteRole:function(e,t){t={url:s("formatString")(i.urls.deleteGroupRoleUrl,{groupId:e,roleId:t})};return o.httpDelete(t)},getUserCurrency:function(e){var r={url:s("formatString")(i.urls.getUserCurrencyUrl,{userId:e})};return t(function(t,n){return o.httpGet(r).then(function(e){t(e.robux)},function(e){e=o.getApiErrorCodes(e);n(e[0]||0)})})},updateGroupRolePermissions:function(e,t,n){t={url:s("formatString")(i.urls.updateGroupRolePermissions,{groupId:e,roleSetId:t})};return o.httpPatch(t,n)},getAllGroupRolePermissions:function(e){e={url:s("formatString")(i.urls.getAllGroupRolePermissions,{groupId:e})};return o.httpGet(e)}}}r.$inject=["httpService","configureGroupConstants","$filter","$q"],n.Z.factory("configureGroupRolesService",r),t.default=r},1466:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(o,n,c,r,g,d,p,m){return{updateGroupDescription:function(e,t){e={url:r("formatString")(c.urls.updateGroupDescriptionUrl,{groupId:e})},t={description:t};return n.httpPatch(e,t)},updateGroupIcon:function(e,t){e={url:r("formatString")(c.urls.updateGroupIconUrl,{groupId:e}),withFile:!0};(new FormData).append(t.name,t);t={file:t};return n.httpPatch(e,t)},loadGroupMenuOptions:function(a){return o(function(i,t){var e=g.getGroupMembership(a),n=m.getGroupConfigurationMetadata(),r=m.getAddFundsAllowed(a),s=[],l={},u={};o.all([e,n,r]).then(function(e){var t=e[0].userRole.role,n=e[0].permissions,r=e[1],a=e[2],o=t.rank===r.roleConfiguration.maxRank;c.menuOptions.forEach(function(e){var t;!function(e,t,n){if(t)return 1;if(e.name===c.menuOptionNames.settings){if(n.groupManagementPermissions.manageRelationships)return 1}else if(e.name===c.menuOptionNames.revenue){if(n.groupEconomyPermissions.spendGroupFunds)return 1}else if(e.name===c.menuOptionNames.members){if(n.groupMembershipPermissions.changeRank||n.groupMembershipPermissions.inviteMembers||n.groupMembershipPermissions.removeMembers)return 1}else if(e.name===c.menuOptionNames.roles){if(n.groupMembershipPermissions.changeRank)return 1}else if(e.name===c.menuOptionNames.affiliates){if(n.groupManagementPermissions.manageRelationships)return 1}else if(e.name===c.menuOptionNames.auditLog&&n.groupManagementPermissions.viewAuditLogs)return 1}(e,o,n)?l[e.name]=!1:(t=[],e.displayName=p.get(e.translationKey),s.push(e),l[e.name]=!0,e.submenuOptions.forEach(function(e){!function(e,t,n,r){if(t&&e.name===c.submenuOptionNames.addFunds)return!!r;if(t)return 1;if(e.name===c.submenuOptionNames.summary||e.name===c.submenuOptionNames.sales){if(n.groupEconomyPermissions.spendGroupFunds)return 1}else if((e.name===c.submenuOptionNames.allies||e.name===c.submenuOptionNames.enemies)&&n.groupManagementPermissions.manageRelationships)return 1}(e,o,n,a)?u[e.name]=!1:(e.displayName=p.get(e.translationKey),t.push(e),u[e.name]=!0)}),e.submenuOptions=t)}),i({menuOptions:s,menuOptionNameValidity:l,submenuOptionNameValidity:u})},function(e){d.debug("--error waiting for membershipPromise and metadataPromise---"),t(e)})})}}}r.$inject=["$q","httpService","configureGroupConstants","$filter","groupMembershipService","$log","languageResource","groupsService"],n.Z.factory("configureGroupService",r),t.default=r},9298:function(e,t,n){"use strict";n.r(t);var r=n(792),n=n(9683);function a(e,n){return{permissionCategoryToggleUtility:{showPermissionType:{},nameOfOpen:e.permissionTypeCollapseToggle.nameOfOpen,nameOfClose:e.permissionTypeCollapseToggle.nameOfClose},parseGroupId:function(e){e=/\/groups\/configure\?id=(\d+)/g.exec(e);return e&&1<e.length?Number(e[1]):null},profilePageUrl:function(e){return r.Endpoints?r.Endpoints.getAbsoluteUrl("/users/".concat(e,"/profile")):"/users/".concat(e,"/profile")},groupDetailsPageUrl:function(e,t){return n("seoUrl")("groups",e,t)},getNameForDisplay:function(e){if(!e)return null;var t=e,n=t.displayName,e=t.username;return t.nameForDisplay=r.DisplayNames.Enabled()?n:e,t}}}a.$inject=["configureGroupConstants","$filter"],n.Z.factory("configureGroupUtilityService",a),t.default=a},5105:function(e,t,n){"use strict";n.r(t);n=n(9683);function r(e,t){var n={all:t.get("Label.All"),deletePost:t.get("Label.DeletePost"),removeMember:t.get("Label.RemoveMember"),acceptJoinRequest:t.get("Label.AcceptJoinRequest"),declineJoinRequest:t.get("Label.DeclineJoinRequest"),postStatus:t.get("Label.PostStatus"),changeRank:t.get("Label.ChangeRank"),buyAd:t.get("Label.BuyAd"),sendAllyRequest:t.get("Label.SendAllyRequest"),createEnemy:t.get("Label.CreateEnemy"),acceptAllyRequest:t.get("Label.AcceptAllyRequest"),declineAllyRequest:t.get("Label.DeclineAllyRequest"),deleteAlly:t.get("Label.DeleteAlly"),deleteEnemy:t.get("Label.DeleteEnemy"),addGroupPlace:t.get("Label.AddGroupPlace"),removeGroupPlace:t.get("Label.DeleteGroupPlace"),createItems:t.get("Label.CreateItems"),configureItems:t.get("Label.ConfigureItems"),spendGroupFunds:t.get("Label.SpendGroupFunds"),changeOwner:t.get("Label.ChangeOwner"),delete:t.get("Label.Delete"),adjustCurrencyAmounts:t.get("Label.AdjustCurrencyAmounts"),abandon:t.get("Label.Abandon"),claim:t.get("Label.Claim"),rename:t.get("Label.Rename"),changeDescription:t.get("Label.ChangeDescription"),createGroupAsset:t.get("Label.CreateGroupAsset"),updateGroupAsset:t.get("Label.UpdateGroupAsset"),configureGroupAsset:t.get("Label.ConfigureGroupAsset"),revertGroupAsset:t.get("Label.RevertGroupAsset"),createGroupDeveloperProduct:t.get("Label.CreateGroupDeveloperProduct"),configureGroupGame:t.get("Label.ConfigureGroupGame"),lock:t.get("Label.Lock"),unlock:t.get("Label.Unlock"),createGamePass:t.get("Label.CreateGamePass"),createBadge:t.get("Label.CreateBadge"),configureBadge:t.get("Label.ConfigureBadge"),savePlace:t.get("Label.SavePlace"),publishPlace:t.get("Label.PublishPlace"),inviteToClan:t.get("Label.InviteToClan"),kickFromClan:t.get("Label.KickFromClan"),cancelClanInvite:t.get("Label.CancelClanInvite"),buyClan:t.get("Label.BuyClan")};return{getTextResources:function(){return e(function(e,t){e(n)})}}}r.$inject=["$q","languageResource"],n.Z.factory("translationService",r),t.default=r},6255:function(e){e.exports='<li class="list-item avatar-card"> <div class="avatar-card-container"> <div class="avatar-card-menu group-menu"> <a tabindex="0" class="rbx-menu-item" popover-placement="bottom-right" popover-trigger="\'outsideClick\'" uib-popover-template="\'configure-group-affiliate-card-popover\'"> <span class="icon-more"></span> </a> </div> <div class="avatar-card-content"> <div class="avatar-card-fullbody"> <a ng-href="{{ $ctrl.affiliateGroup.url }}" class="avatar-card-link"> <thumbnail-2d thumbnail-type="$ctrl.thumbnailTypes.groupIcon" thumbnail-target-id="$ctrl.affiliateGroup.id"></thumbnail-2d> </a> </div> <div class="avatar-card-caption avatar-card-caption-with-menu"> <a ng-href="{{ $ctrl.affiliateGroup.url }}" class="avatar-name game-name-title" title="{{ $ctrl.affiliateGroup.name }}" ng-bind="$ctrl.affiliateGroup.name"></a> <div class="avatar-status-container"> <div class="avatar-card-label text-overflow" ng-bind="\'Label.Members\' | translate:{ memberCount: $ctrl.affiliateGroup.memberCount }"></div> </div> </div> </div> </div> </li>'},1996:function(e){e.exports='<li class="list-item avatar-card" ng-class="{\'faded\' : $ctrl.cardActive }"> <div class="avatar-card-container"> <div class="avatar-card-content"> <div class="avatar-card-fullbody"> <a ng-href="{{ $ctrl.allyRequest.url }}" class="avatar-card-link"> <thumbnail-2d thumbnail-type="$ctrl.thumbnailTypes.groupIcon" thumbnail-target-id="$ctrl.allyRequest.id"></thumbnail-2d> </a> </div> <div class="avatar-card-caption"> <a ng-href="{{ $ctrl.allyRequest.url }}" class="avatar-name game-name-title" title="{{ $ctrl.allyRequest.name }}" ng-bind="$ctrl.allyRequest.name"></a> <div class="avatar-status-container"> <div class="avatar-card-label text-overflow" ng-bind="\'Label.Members\' | translate:{ memberCount: $ctrl.allyRequest.memberCount }"></div> </div> </div> </div> <div class="avatar-card-btns"> <a ng-click="$ctrl.declineRequest($ctrl.allyRequest.id)" class="btn-control-sm decline-request-button" ng-bind="\'Action.Decline\' | translate"></a> <a ng-click="$ctrl.acceptRequest($ctrl.allyRequest.id)" class="btn-cta-sm accept-request-button" ng-bind="\'Action.Accept\' | translate"></a> </div> </div> </li>'},6915:function(e){e.exports='<div class="rbx-tabs-horizontal"> <ul id="horizontal-tabs" class="nav nav-tabs" role="tablist"> <li class="rbx-tab" ng-class="{active : !$ctrl.isRequestsActiveTab}" ng-click="$ctrl.isRequestsActiveTab = false"> <a class="rbx-tab-heading"> <span class="text-lead" ng-bind="\'Heading.Allies\' | translate"></span> </a> </li> <li class="rbx-tab" ng-class="{active : $ctrl.isRequestsActiveTab}" ng-click="$ctrl.isRequestsActiveTab = true"> <a class="rbx-tab-heading"> <span class="text-lead" ng-bind="\'Heading.Requests\' | translate"></span> </a> </li> </ul> <configure-group-allies-list class="section" group-id="$ctrl.group.id" relationship-type="$ctrl.relationshipType" ng-if="!$ctrl.isRequestsActiveTab"></configure-group-allies-list> <configure-group-ally-requests class="section" group-id="$ctrl.group.id" relationship-type="$ctrl.relationshipType" ng-if="$ctrl.isRequestsActiveTab"></configure-group-ally-requests> </div>'},6138:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Allies\' | translate"></h3> <div class="input-group"> <button ng-click="$ctrl.showAffiliateRequestModal()" type="button" class="btn-primary-sm" ng-bind="\'Label.SendAllyRequest\' | translate"></button> </div> </div> <div class="group-affiliates"> <div class="spinner spinner-default" ng-show="$ctrl.layout.isLoading"></div> <div class="section-content-off" ng-show="!affiliatesPager.isBusy() && $ctrl.affiliates.length == 0 && $ctrl.loadAffiliatesError" ng-bind="\'Message.GetGroupRelationshipsError\' | translate"></div> <div class="section-content-off" ng-show="!affiliatesPager.isBusy() && $ctrl.affiliates.length == 0 && !$ctrl.loadAffiliatesError" ng-bind="\'Label.NoAllies\' | translate"></div> <ul class="hlist avatar-cards" ng-class="{\'faded\': affiliatesPager.isBusy()}"> <configure-group-affiliate-card affiliate-group="group" group-id="$ctrl.groupId" relationship-type="$ctrl.relationshipType" reload-current-page="affiliatesPager.removeItemAtIndex($index)" ng-repeat="group in $ctrl.affiliates"></configure-group-affiliate-card> </ul> <div ng-show="$ctrl.affiliates.length > 0" class="pager-holder" cursor-pagination="affiliatesPager"></div> </div>'},1120:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Requests\' | translate"></h3> <div class="input-group requests-button-container"> <button ng-click="$ctrl.declineAllRequests()" type="button" class="decline-requests-button btn-control-sm" ng-bind="\'Action.DeclineAll\' | translate"> </button> <button ng-click="$ctrl.acceptAllRequests()" type="button" class="accept-requests-button btn-cta-sm" ng-bind="\'Action.AcceptAll\' | translate"> </button> </div> </div> <div class="group-affiliates"> <div class="spinner spinner-default" ng-show="$ctrl.layout.isLoading"></div> <div class="section-content-off" ng-show="!affiliateRequestsPager.isBusy() && $ctrl.affiliateRequests.length == 0 && $ctrl.loadAffiliateRequestsError" ng-bind="\'Message.UnableToLoadAllyRequests\' | translate"></div> <div class="section-content-off" ng-show="!affiliateRequestsPager.isBusy() && $ctrl.affiliateRequests.length == 0 && !$ctrl.loadAffiliateRequestsError" ng-bind="\'Message.NoAllyRequests\' | translate"></div> <ul class="hlist avatar-cards" ng-class="{\'faded\': affiliateRequestsPager.isBusy()}"> <configure-group-affiliate-request-card ally-request="affiliateRequest" group-id="$ctrl.groupId" relationship-type="$ctrl.relationshipType" reload-current-page="affiliateRequestsPager.removeItemAtIndex($index)" ng-repeat="affiliateRequest in $ctrl.affiliateRequests"></configure-group-affiliate-request-card> </ul> <div ng-show="$ctrl.affiliateRequests.length > 0" class="pager-holder" cursor-pagination="affiliateRequestsPager"></div> </div>'},1089:function(e){e.exports='<div ng-if="!$ctrl.group.areEnemiesAllowed"> <div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Enemies\' | translate"></h3> </div> <div class="group-affiliates"> <div class="section-content-off" ng-bind="\'Label.EnemyDeclarationsNotEnabled\' | translate"></div> </div> </div> <configure-group-enemies-list class="section" group-id="$ctrl.group.id" relationship-type="$ctrl.relationshipType" ng-if="$ctrl.group.areEnemiesAllowed"></configure-group-enemies-list>'},5617:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Enemies\' | translate"></h3> <div class="input-group"> <button ng-click="$ctrl.showAffiliateRequestModal()" type="button" class="btn-primary-sm" ng-bind="\'Label.DeclareEnemy\' | translate"></button> </div> </div> <div class="group-affiliates"> <div class="spinner spinner-default" ng-show="$ctrl.layout.isLoading"></div> <div class="section-content-off" ng-show="!affiliatesPager.isBusy() && $ctrl.affiliates.length == 0 && $ctrl.loadAffiliatesError" ng-bind="\'Message.GetGroupRelationshipsError\' | translate"></div> <div class="section-content-off" ng-show="!affiliatesPager.isBusy() && $ctrl.affiliates.length == 0 && !$ctrl.loadAffiliatesError" ng-bind="\'Label.NoEnemies\' | translate"></div> <ul class="hlist avatar-cards" ng-class="{\'faded\': affiliatesPager.isBusy()}"> <configure-group-affiliate-card affiliate-group="group" group-id="$ctrl.groupId" relationship-type="$ctrl.relationshipType" reload-current-page="affiliatesPager.removeItemAtIndex($index)" ng-repeat="group in $ctrl.affiliates"></configure-group-affiliate-card> </ul> <div ng-show="$ctrl.affiliates.length > 0" class="pager-holder" cursor-pagination="affiliatesPager"></div> </div>'},4614:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.AuditLog\' | translate"></h3> <div class="input-group search-container"> <input class="form-control input-field" placeholder="{{ \'Label.SearchUsers\' | translate }}" ng-keyup="$event.keyCode === $ctrl.keyCodes.enter && $ctrl.filterKeyword()" ng-model="$ctrl.query.keyword"/> <div class="input-group-btn"> <button class="input-addon-btn" type="submit" ng-click="$ctrl.filterKeyword()"> <span class="icon-search"></span> </button> </div> <div class="input-group-btn group-dropdown"> <button type="button" class="input-dropdown-btn" data-toggle="dropdown"> <span class="rbx-selection-label" data-bind="label" ng-bind="$ctrl.query.action"></span> <span class="icon-down-16x16"></span> </button> <ul data-toggle="dropdown-menu" class="dropdown-menu" role="menu"> <li ng-repeat="(i, type) in $ctrl.translationResources"> <a ng-click="$ctrl.filterType(i, type)" ng-bind="type" title="{{ type }}"></a> </li> </ul> </div> </div> </div> <div class="section"> <div ng-show="pager.isBusy() && !$ctrl.loadError && $ctrl.logs.length === 0"> <span class="spinner spinner-default"></span> </div> <div ng-show="!pager.isBusy() && !$ctrl.loadError && $ctrl.logs.length === 0" class="section-content-off" ng-bind="\'Message.NoRecordsFound\' | translate"></div> <div ng-show="!pager.isBusy() && $ctrl.loadError" class="section-content-off" ng-bind="$ctrl.loadError"></div> <table ng-show="$ctrl.logs.length > 0" ng-class="{ \'faded\' : pager.isBusy() }" class="audit-log table table-striped"> <tr> <th class="date" ng-bind="\'Heading.Date\' | translate"></th> <th class="user" ng-bind="\'Heading.User\' | translate"></th> <th class="description" ng-bind="\'Heading.Description\' | translate"></th> </tr> <tr ng-repeat="log in $ctrl.logs" ng-class="{\'faded\': pager.isBusy()}"> <td class="date"> <div ng-bind="log.created | datetime :{ month: \'short\', day: \'2-digit\', year: \'numeric\'}"></div> <div ng-bind="log.created | datetime :{ hour: \'numeric\', minute: \'numeric\'}"></div> </td> <td class="user"> <div class="avatar-card"> <div class="avatar avatar-headshot avatar-headshot-xs"> <a class="avatar-card-link" ng-href="{{\'users\' | seoUrl: log.actor.user.userId:\'profile\' }}"> <thumbnail-2d class="avatar-card-image" thumbnail-type="$ctrl.thumbnailTypes.avatarHeadshot" thumbnail-target-id="log.actor.user.userId"></thumbnail-2d> </a> </div> <div class="avatar-card-caption"> <a class="avatar-card-name text-name text-overflow" ng-href="{{\'users\' | seoUrl: log.actor.user.userId:\'profile\' }}" ng-bind="log.actor.user.nameForDisplay"></a> <div class="avatar-card-label text-secondary text-overflow" ng-bind="log.actor.role.name"></div> </div> </div> </td> <td class="description"> <div class="description-text" ng-bind-html="log.formattedDescription"></div> </td> </tr> </table> <ul class="audit-log vlist"> <li class="list-item" ng-repeat="log in $ctrl.logs" ng-class="{\'faded\': pager.isBusy()}"> <div class="avatar avatar-headshot avatar-headshot-xs"> <a class="avatar-card-link" ng-href="{{\'users\' | seoUrl: log.actor.user.userId:\'profile\' }}"> <thumbnail-2d class="avatar-card-image" thumbnail-type="$ctrl.thumbnailTypes.avatarHeadshot" thumbnail-target-id="log.actor.user.userId"></thumbnail-2d> </a> </div> <div class="audit-log-caption"> <a class="text-name text-overflow" ng-href="{{\'users\' | seoUrl: log.actor.user.userId:\'profile\' }}" ng-bind="log.actor.user.nameForDisplay"></a> <div class="avatar-card-label text-secondary text-overflow" ng-bind="log.actor.role.name"></div> <div class="description" ng-bind-html="log.formattedDescription"></div> <div class="text-date-hint" ng-bind="log.created | datetime: \'full\'"></div> </div> </li> </ul> <div ng-show="$ctrl.logs.length > 0" class="pager-holder table-pager" cursor-pagination="pager"></div> </div>'},1265:function(e){e.exports='<div class="section configure-group-information"> <div ng-if="$ctrl.policies.displayUploadGroupIcon" class="container-header"> <h3 ng-bind="\'Label.CreateGroupEmblem\' | translate"></h3> </div> <div ng-if="$ctrl.policies.displayUploadGroupIcon" class="section-content remove-panel"> <div class="file-upload-container full-screen"> <file-upload file-upload-info="$ctrl.fileUploadInfo" thumbnail-state="$ctrl.thumbnailState"></file-upload> <button type="button" class="btn-secondary-md btn-action save-button" ng-click="$ctrl.updateGroupIcon()" ng-disabled="!$ctrl.fileUploadInfo.fileSelected" ng-bind="\'Action.Save\' | translate"></button> </div> </div> <div class="container-header"> <h3 ng-bind="\'Heading.Description\' | translate"></h3> </div> <div class="section-content remove-panel configure-group-description"> <div class="form-group form-has-feedback"> <textarea class="form-control input-field group-description" rows="10" ng-model="$ctrl.group.description" maxlength="{{ $ctrl.metadata.groupConfiguration.descriptionMaxLength }}"></textarea> <p class="form-control-label" ng-if="$ctrl.group.description" ng-bind="$ctrl.group.description.length | formatCharacterCount: $ctrl.metadata.groupConfiguration.descriptionMaxLength"></p> </div> <div class="input-group-btn" toggle-loading="" is-inline="true" is-loading="$ctrl.isLoading"> <button id="submit-button" type="button" class="btn-secondary-md btn-action save-button" ng-click="$ctrl.updateGroupDescription()" ng-bind="\'Action.Save\' | translate"></button> </div> </div> <div class="container-header"> <h3 ng-bind="\'Label.Ownership\' | translate"></h3> </div> <div class="section-content"> <div class="change-owner"> <span ng-bind="\'Label.ChangeGroupOwner\' | translate"></span> <button class="btn-secondary-md save-button" ng-click="$ctrl.showChangeOwnerModal()" ng-bind="\'Label.ChangeOwner\' | translate"></button> </div> </div> </div> '},2511:function(e){e.exports=' <div class="menu-vertical-container"> <ul id="groups-configure-vertical-menu" class="menu-vertical submenus" vertical-menu reset-vertical-menu="$ctrl.resetVerticalMenu"> <li class="menu-option" ng-repeat="menuOption in $ctrl.menuOptions" ui-sref="{{ menuOption.name }}" ng-class="{\'active\' : $ctrl.currentMenuOption.name == menuOption.name}" on-finish-render="ngRepeatFinished"> <a class="menu-option-content"> <span class="menu-text font-caption-header text-overflow" ng-bind="menuOption.displayName"></span> <span ng-if="menuOption.submenuOptions.length > 0" class="icon-right-16x16"></span> </a> <div ng-if="menuOption.submenuOptions.length > 0" class="menu-secondary-container"> <ul class="menu-secondary"> <li class="menu-secondary-option text-overflow" ng-click="$event.stopPropagation()" ng-repeat="submenuOption in menuOption.submenuOptions" ui-sref="{{ menuOption.name + \'/\' + submenuOption.name }}" ng-class="{\'active\' : $ctrl.currentSubmenuOption.name == submenuOption.name}"> <span class="menu-text font-caption-header" ng-bind="submenuOption.displayName"></span> </li> </ul> </div> </li> </ul> </div> <div class="menu-dropdown-container input-group-btn"> <div class="input-group-btn menu-dropdown" uib-dropdown> <button type="button" uib-dropdown-toggle="" class="input-dropdown-btn" aria-haspopup="true" aria-expanded="false"> <span class="rbx-selection-label" ng-bind="$ctrl.currentMenuOption.displayName"></span> <span class="icon-down-16x16"></span> </button> <ul class="dropdown-menu" role="menu" uib-dropdown-menu> <li ng-repeat="menuOption in $ctrl.menuOptions" ui-sref="{{ menuOption.name }}" ng-class="{\'active\' : $ctrl.currentMenuOption.name == menuOption.name}"> <a ng-bind="menuOption.displayName"></a> </li> </ul> </div> <div ng-if="$ctrl.currentMenuOption.submenuOptions.length > 0" class="input-group-btn submenu-dropdown" uib-dropdown> <button type="button" uib-dropdown-toggle="" class="input-dropdown-btn" aria-haspopup="true" aria-expanded="false"> <span class="rbx-selection-label" ng-bind="$ctrl.currentSubmenuOption.displayName"></span> <span class="icon-down-16x16"></span> </button> <ul class="dropdown-menu" role="menu" uib-dropdown-menu> <li ng-repeat="submenuOption in $ctrl.currentMenuOption.submenuOptions" ui-sref="{{ $ctrl.currentMenuOption.name + \'/\' + submenuOption.name }}" ng-class="{\'active\' : $ctrl.currentSubmenuOption.name == submenuOption.name}"> <a ng-bind="submenuOption.displayName"></a> </li> </ul> </div> </div> '},9727:function(e){e.exports='<system-feedback></system-feedback> <div class="section configure-group"> <div class="container-header"> <h1 class="configure-group-title"> <span ng-bind="\'Heading.ConfigureGroup\' | translate:{ groupName: $ctrl.group.name }"></span> </h1> <div> <span class="text-label" ng-bind="\'Label.ByOwner\' | translate"></span> <a ng-if="$ctrl.doesGroupHaveOwner()" ng-href="{{ $ctrl.profilePageUrl($ctrl.group.owner.userId) }}" class="text-name name" ng-bind="$ctrl.group.owner.nameForDisplay"></a> <span ng-if="!$ctrl.doesGroupHaveOwner()" class="group-owner-name" ng-bind="\'Label.NoOne\' | translate"></span> <a ng-if="!$ctrl.displayGroupFunds()" ng-href="{{ $ctrl.detailsPageUrl }}" class="btn-secondary-xs btn-more see-all-link-icon" target="_self" ng-bind="\'Action.BackToGroup\' | translate"></a> </div> <div ng-if="$ctrl.displayGroupFunds()"> <span class="text-label icon-robux-container"> <span ng-bind="\'Label.GroupFunds\' | translate"></span> <span class="icon-robux-16x16"></span> <span class="text-robux" ng-bind="$ctrl.groupFunds | number:0"></span> </span> <a ng-href="{{ $ctrl.detailsPageUrl }}" class="btn-secondary-xs btn-more see-all-link-icon" target="_self" ng-bind="\'Action.BackToGroup\' | translate"></a> </div> </div> <div ng-if="$ctrl.layout.pageError" class="col-xs-12 section-content-off" ng-bind="$ctrl.layout.pageError"></div> <div class="col-xs-12" ng-if="$ctrl.layout.isLoadFinished"> <div class="tab-content-group"> <configure-group-menu menu-options="$ctrl.menuOptions" current-menu-option="$ctrl.currentMenuOption" current-submenu-option="$ctrl.currentSubmenuOption"></configure-group-menu> <div class="tab-content configure-group-details"> <configure-group-information group="$ctrl.group" metadata="$ctrl.metadata" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.information"></configure-group-information> <configure-group-settings group="$ctrl.group" metadata="$ctrl.metadata" ng-if="$ctrl.currentMenuOption.name == $ctrl.menuOptionNames.settings"></configure-group-settings> <social-links-configuration target-type="group" target-id="$ctrl.group.id" social-link-limit="3" v2="true" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.socialLinks"></social-links-configuration> <revenue-summary target-id="$ctrl.group.id" target-type="Group" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.revenue\r\n                                           && $ctrl.currentSubmenuOption.name === $ctrl.submenuOptionNames.summary"> </revenue-summary> <transactions target-id="$ctrl.group.id" target-type="Group" transaction-type="Sale" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.revenue\r\n                                        && $ctrl.currentSubmenuOption.name === $ctrl.submenuOptionNames.sales"> </transactions> <configure-group-payouts group-id="$ctrl.group.id" group-funds="$ctrl.groupFunds" reload-group-funds="$ctrl.loadGroupCurrency" ng-if="$ctrl.currentMenuOption.name == $ctrl.menuOptionNames.revenue\r\n                                             && $ctrl.currentSubmenuOption.name == $ctrl.submenuOptionNames.payouts"> </configure-group-payouts> <group-add-funds group="$ctrl.group" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.revenue && $ctrl.currentSubmenuOption.name === $ctrl.submenuOptionNames.addFunds"> </group-add-funds> <configure-group-members group="$ctrl.group" metadata="$ctrl.metadata" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.members"></configure-group-members> <configure-group-roles group="$ctrl.group" metadata="$ctrl.metadata" reload-group-funds="$ctrl.loadGroupCurrency" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.roles"></configure-group-roles> <configure-group-allies group="$ctrl.group" relationship-type="$ctrl.relationshipTypes.allies" ng-if="$ctrl.currentMenuOption.name == $ctrl.menuOptionNames.affiliates\r\n                                            && $ctrl.currentSubmenuOption.name == $ctrl.submenuOptionNames.allies"> </configure-group-allies> <configure-group-enemies group="$ctrl.group" relationship-type="$ctrl.relationshipTypes.enemies" ng-if="$ctrl.currentMenuOption.name == $ctrl.menuOptionNames.affiliates\r\n                                             && $ctrl.currentSubmenuOption.name == $ctrl.submenuOptionNames.enemies"> </configure-group-enemies> <audit-log group-id="$ctrl.group.id" ng-if="$ctrl.currentMenuOption.name === $ctrl.menuOptionNames.auditLog"> </audit-log> </div> </div> </div> </div> '},1713:function(e){e.exports='<div ng-if="$ctrl.groupRole.isActive"> <div class="section-content remove-panel"> <div class="form-group form-has-feedback" ng-class="{\'form-has-error\': !$ctrl.data.newName }"> <label class="text-label" for="role-name" ng-bind="\'Label.Name\' | translate"></label> <input id="role-name" class="form-control input-field" maxlength="{{ $ctrl.metadata.roleConfiguration.nameMaxLength }}" ng-model="$ctrl.data.newName" ng-disabled="$ctrl.isNameFieldDisabled()"> <p class="form-control-label" ng-if="!$ctrl.data.newName.length" ng-bind="\'Message.NameFieldEmpty\' | translate"></p> <p class="form-control-label" ng-if="$ctrl.data.newName && $ctrl.data.newName.length > 0" ng-bind="$ctrl.data.newName.length | formatCharacterCount: $ctrl.metadata.roleConfiguration.nameMaxLength"></p> </div> <div class="form-group form-has-feedback"> <label class="text-label" for="role-description" ng-bind="\'Heading.Description\' | translate"></label> <textarea id="role-description" class="form-control input-field" rows="4" maxlength="{{ $ctrl.metadata.roleConfiguration.descriptionMaxLength }}" ng-model="$ctrl.data.newDescription" ng-disabled="$ctrl.isDescriptionFieldDisabled()"></textarea> <p class="form-control-label" ng-if="$ctrl.data.newDescription && $ctrl.data.newDescription.length > 0" ng-bind="$ctrl.data.newDescription.length | formatCharacterCount: $ctrl.metadata.roleConfiguration.descriptionMaxLength"></p> </div> <div class="form-group form-has-feedback" ng-class="{\'form-has-error\': $ctrl.rankHasError() }"> <label class="text-label" for="role-rank"> <span ng-bind="\'Heading.Rank\' | translate"></span> ({{ $ctrl.metadata.roleConfiguration.minRank }}-{{ $ctrl.metadata.roleConfiguration.maxRank }}) </label> <input id="role-rank" class="form-control input-field input-number" type="number" min="{{ $ctrl.metadata.roleConfiguration.minRank }}" max="{{ $ctrl.metadata.roleConfiguration.maxRank }}" ng-model="$ctrl.data.newRank" ng-disabled="$ctrl.isRankFieldDisabled()" oninput="validity.valid?this.save=value:value=this.save"/> <p class="form-control-label" ng-if="$ctrl.rankHasError()" ng-bind="$ctrl.layout.rankError"></p> </div> <div class="input-group-btn" toggle-loading="" is-inline="true" is-loading="$ctrl.layout.isLoading" ng-if="$ctrl.showSaveButton()"> <button type="button" class="save-button btn-secondary-md" ng-disabled="$ctrl.isSaveButtonDisabled()" ng-click="$ctrl.updateRole()" ng-bind="\'Action.Save\' | translate"></button> </div> </div> <div ng-repeat="(permissionCategory, permissions) in $ctrl.permissions"> <div class="container-header"> <h3 ng-bind="$ctrl.roleSettingsTranslations[permissionCategory] | translate"></h3> <a class="btn-fixed-width btn-secondary-xs btn-more see-all-link" ng-click="$ctrl.togglePermissionCategory(permissionCategory)" ng-cloak>{{ $ctrl.permissionCategoryToggleLabel(permissionCategory) }}</a> </div> <div class="section-content" ng-show="$ctrl.isPermissionCategoryShown(permissionCategory)"> <div class="permission-row" ng-repeat="(permissionName, permissionValue) in permissions" ng-if="!$ctrl.isHiddenPermission(permissionName)"> <span class="btn-toggle" ng-class="{\'on\' : permissionValue, \'disabled\' : $ctrl.isImmutablePermission(permissionCategory, permissionName)}" ng-click="$ctrl.togglePermissionValue(permissionCategory, permissionName)"> <span class="toggle-flip"></span> <span id="toggle-on" class="toggle-on"></span> <span id="toggle-off" class="toggle-off"></span> </span> <div ng-bind="$ctrl.roleSettingsTranslations[permissionName] | translate"></div> <div class="rbx-divider"></div> </div> </div> </div> <div ng-if="$ctrl.showDeleteRole()"> <div class="container-header"> <h3 ng-bind="\'Action.DeleteRole\' | translate"></h3> </div> <div class="section-content"> <span ng-show="$ctrl.canDeleteRole()" ng-bind="\'Label.PermDeleteRole\' | translate"></span> <span ng-hide="$ctrl.canDeleteRole()" ng-bind="\'Message.RoleWithUsers\' | translate:{ amount: $ctrl.groupRole.memberCount }"></span> <button class="btn-alert-md save-button" ng-disabled="!$ctrl.canDeleteRole()" ng-click="$ctrl.showDeleteRoleModal()" ng-bind="\'Action.DeleteRole\' | translate"></button> </div> </div> </div> '},9424:function(e){e.exports='<div ng-if="$ctrl.layout.rolesError" class="col-xs-12 section-content-off" ng-bind="$ctrl.layout.rolesError"></div> <div class="section"> <div ng-if="$ctrl.roles" class="configure-group-roles-list menu-vertical-container border-right"> <span class="font-header-2 text-overflow" ng-bind="\'Heading.Roles\' | translate"></span> <ul id="groups-configure-vertical-menu" class="roles-list" vertical-menu> <li class="small text menu-link text-link-secondary" ng-repeat="roleDetails in $ctrl.roles | orderBy: \'role.rank\': \'true\'" ng-class="{\'active\' : roleDetails.role.isActive}" ng-click="$ctrl.activateRole(roleDetails.role)" title="{{ roleDetails.role.name }}"> <a class="menu-option-content text-overflow" ng-bind="roleDetails.role.name"></a> </li> <button ng-if="$ctrl.layout.isOwner" class="btn-primary-xs create-role-button" ng-click="$ctrl.showCreateRoleModal()" ng-disabled="!$ctrl.canCreateRole()" ng-bind="\'Action.CreateRole\' | translate"></button> </ul> <span ng-if="$ctrl.layout.isOwner" ng-hide="$ctrl.canCreateRole()" class="small text create-role-text" ng-bind="\'Message.MaxRoles\' | translate"></span> </div> <div ng-if="$ctrl.roles" class="configure-group-roles-list menu-dropdown-container input-group-btn"> <div class="input-group-btn" uib-dropdown> <button type="button" uib-dropdown-toggle="" class="input-dropdown-btn" aria-haspopup="true" aria-expanded="false"> <span class="rbx-selection-label" ng-bind="$ctrl.activeRole.name"></span> <span class="icon-down-16x16"></span> </button> <ul class="dropdown-menu" role="menu" uib-dropdown-menu> <li ng-repeat="roleDetails in $ctrl.roles | orderBy: \'role.rank\': \'true\'" ng-click="$ctrl.activateRole(roleDetails.role)" ng-class="{\'active\' : roleDetails.role.isActive}"> <a ng-bind="roleDetails.role.name"></a> </li> </ul> </div> <button ng-if="$ctrl.layout.isOwner" class="btn-primary-md create-role-button" ng-click="$ctrl.showCreateRoleModal()" ng-disabled="!$ctrl.canCreateRole()" ng-bind="\'Action.CreateRole\' | translate"></button> <div ng-if="$ctrl.layout.isOwner" ng-hide="$ctrl.canCreateRole()" class="small text create-role-text" ng-bind="\'Message.MaxRoles\' | translate"></div> </div> <configure-group-role-settings group-role="roleDetails.role" permissions="roleDetails.permissions" group="$ctrl.group" metadata="$ctrl.metadata" delete-role="$ctrl.deleteRoleAtIndex($index)" ng-repeat="roleDetails in $ctrl.roles"></configure-group-role-settings> </div>'},2099:function(e){e.exports='<span class="btn-toggle off" ng-class="{ \'on\' : $ctrl.value, \'disabled\' : $ctrl.disabled()($ctrl.settingName) }" ng-click="$ctrl.click()($ctrl.settingName)"> <span class="toggle-flip"></span> <span id="toggle-on" class="toggle-on"></span> <span id="toggle-off" class="toggle-off"></span> </span> <div ng-bind="$ctrl.label"></div> <div ng-if="$ctrl.textDescription" class="rbx-divider"></div> <div ng-if="$ctrl.textDescription" class="text-description" ng-bind="$ctrl.textDescription"></div>'},1610:function(e){e.exports='<div ng-if="$ctrl.layout.settingsError" class="col-xs-12 section-content-off" ng-bind="$ctrl.layout.settingsError"></div> <div ng-if="!$ctrl.layout.settingsError || ctrl.groupPoliciesLoading" class="section"> <div ng-if="$ctrl.layout.isOwner"> <div ng-if="$ctrl.policies.displayGroupPrivacySettings" class="container-header"> <h3 ng-bind="\'Heading.JoinRequirements\' | translate"></h3> </div> <div ng-if="$ctrl.policies.displayGroupPrivacySettings" class="section-content"> <configure-group-setting-toggle setting-name="isApprovalRequired" label="{{ \'Label.ManualApproval\' | translate }}" text-description=" {{ \'Label.MustBeAccepted\' | translate }}" value="$ctrl.settings.isApprovalRequired" click="$ctrl.changeSettingValue"></configure-group-setting-toggle> </div> <div class="container-header"> <h3 ng-bind="\'Heading.GroupProfile\' | translate"></h3> </div> <div class="section-content"> <configure-group-setting-toggle setting-name="areGroupFundsVisible" label="{{ \'Label.FundsVisible\' | translate }}" value="$ctrl.settings.areGroupFundsVisible" click="$ctrl.changeSettingValue"></configure-group-setting-toggle> <div class="rbx-divider"></div> <configure-group-setting-toggle setting-name="areGroupGamesVisible" label="{{ \'Label.GamesVisible\' | translate }}" value="$ctrl.settings.areGroupGamesVisible" click="$ctrl.changeSettingValue"></configure-group-setting-toggle> </div> </div> <div ng-if="$ctrl.canManageRelationships()"> <div class="container-header"> <h3 ng-bind="\'Heading.Affiliates\' | translate"></h3> </div> <div class="section-content"> <configure-group-setting-toggle setting-name="areEnemiesAllowed" label="{{ \'Label.AllowDeclarations \' | translate }}" value="$ctrl.settings.areEnemiesAllowed" click="$ctrl.changeSettingValue"></configure-group-setting-toggle> </div> </div> </div>'},897:function(e){e.exports='<li class="list-item avatar-card"> <div class="avatar-card-container"> <div class="avatar-card-content"> <div class="avatar-card-menu group-menu" ng-if="$ctrl.canExileUser()"> <a tabindex="0" class="rbx-menu-item" popover-placement="bottom-right" popover-trigger="\'outsideClick\'" uib-popover-template="\'configure-group-member-card-popover\'"> <span class="icon-more"></span> </a> </div> <div class="avatar avatar-card-fullbody"> <a ng-href="{{$ctrl.memberProfileUrl}}"> <thumbnail-2d class="avatar-card-image" thumbnail-type="$ctrl.thumbnailTypes.avatarHeadshot" thumbnail-target-id="$ctrl.member.userId"></thumbnail-2d> </a> </div> <div class="avatar-card-caption avatar-card-caption-with-menu"> <a ng-href="{{\'users\' | seoUrl:$ctrl.member.userId:\'profile\'}}" class="text-lead text-overflow" ng-bind="$ctrl.member.nameForDisplay" title="{{ $ctrl.member.nameForDisplay }}"></a> </div> </div> <div class="input-group-btn group-dropdown avatar-card-btns"> <button type="button" class="input-dropdown-btn" data-toggle="dropdown" ng-disabled="!$ctrl.canChangeRankOfUser()" title="{{ $ctrl.member.role.name }}"> <span class="rbx-selection-label" ng-bind="$ctrl.member.role.name"></span> <span class="icon-down-16x16"></span> </button> <ul data-toggle="dropdown-menu" class="dropdown-menu" role="menu"> <li ng-repeat="role in $ctrl.configurableRoles" ng-class="{ \'active\': role.id === $ctrl.member.role.id }" ng-if="role.rank !== $ctrl.metadata.roleConfiguration.minRank && role.rank !== $ctrl.metadata.roleConfiguration.maxRank" title="{{ role.name }}"> <a ng-click="$ctrl.updateUserRole($ctrl.member, role, $ctrl.index)"> <span class="text-overflow" ng-bind="role.name"></span> </a> </li> </ul> </div> </div> </li>'},7270:function(e){e.exports='<li class="list-item avatar-card" ng-class="{\'faded\' : $ctrl.cardActive }"> <div class="avatar-card-container"> <div class="avatar-card-content"> <div class="avatar-card-fullbody"> <a ng-href="{{\'users\' | seoUrl:$ctrl.memberRequest.requester.userId:\'profile\' }}" class="avatar-card-link"> <thumbnail-2d class="avatar-card-image" thumbnail-type="$ctrl.thumbnailTypes.avatarHeadshot" thumbnail-target-id="$ctrl.memberRequest.requester.userId"></thumbnail-2d> </a> </div> <div class="avatar-card-caption"> <a ng-href="{{\'users\' | seoUrl:$ctrl.memberRequest.requester.userId:\'profile\' }}" class="text-overflow avatar-name" ng-bind="$ctrl.memberRequest.requester.nameForDisplay"></a> </div> </div> <div class="avatar-card-btns"> <button ng-click="$ctrl.ignoreRequest($ctrl.memberRequest.requester.userId)" class="btn-control-md" ng-bind="\'Action.Decline\' | translate"></button> <button ng-click="$ctrl.acceptRequest($ctrl.memberRequest.requester.userId)" class="btn-cta-md" ng-bind="\'Action.Accept\' | translate"></button> </div> </div> </li>'},1851:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Requests\' | translate"></h3> <div class="input-group search-container requests-button-container"> <input ng-keyup="$event.keyCode === $ctrl.keyCodes.enter && $ctrl.getUserRequest($ctrl.keyword)" ng-model="$ctrl.keyword" class="form-control input-field" placeholder="{{\'Label.SearchUsers\' | translate }}"/> <div class="input-group-btn"> <button ng-click="$ctrl.getUserRequest($ctrl.keyword)" class="input-addon-btn" type="submit"> <span class="icon-search"></span> </button> </div> <button ng-click="$ctrl.declineAllRequests()" type="button" class="decline-requests-button btn-control-sm" ng-bind="\'Action.DeclineAll\' | translate"> </button> <button ng-click="$ctrl.acceptAllRequests()" type="button" class="accept-requests-button btn-cta-sm" ng-bind="\'Action.AcceptAll\' | translate"> </button> </div> </div> <div class="section"> <div ng-show="$ctrl.requests.length == 0 && !memberRequestsPager.isBusy() && !$ctrl.layout.isLoading" class="section-content-off" ng-bind="\'Message.NoPendingRequests\' | translate"></div> <span ng-show="$ctrl.layout.isLoading" class="spinner spinner-default"></span> <ul ng-class="{\'faded\': memberRequestsPager.isBusy()}" class="hlist avatar-cards"> <configure-group-member-request-card member-request="memberRequest" group="$ctrl.group" reload-current-page="memberRequestsPager.removeItemAtIndex($index)" ng-repeat="memberRequest in $ctrl.requests"></configure-group-member-request-card> </ul> <div ng-show="$ctrl.requests.length > 0" class="pager-holder" cursor-pagination="memberRequestsPager"></div> </div>'},3945:function(e){e.exports='<div ng-class="{ \'rbx-tabs-horizontal\': $ctrl.showRequests() }"> <ul ng-if="$ctrl.showRequests()" id="horizontal-tabs" class="nav nav-tabs" role="tablist"> <li class="rbx-tab" ng-class="{active : !$ctrl.isRequestsActiveTab}" ng-click="$ctrl.isRequestsActiveTab = false"> <a class="rbx-tab-heading"> <span class="text-lead" ng-bind="\'Heading.Members\' | translate"></span> </a> </li> <li class="rbx-tab" ng-class="{active : $ctrl.isRequestsActiveTab}" ng-click="$ctrl.isRequestsActiveTab = true"> <a class="rbx-tab-heading"> <span class="text-lead" ng-bind="\'Heading.Requests\' | translate"></span> </a> </li> </ul> <configure-group-members-list class="section" ng-if="!$ctrl.isRequestsActiveTab" group="$ctrl.group" metadata="$ctrl.metadata"></configure-group-members-list> <configure-group-member-requests class="section" ng-if="$ctrl.isRequestsActiveTab\r\n                                            && $ctrl.group.permissions.groupMembershipPermissions.inviteMembers" group="$ctrl.group"></configure-group-member-requests> </div>'},7813:function(e){e.exports='<div class="container-header"> <h3 class="group-title-with-input" ng-bind="\'Heading.Members\' | translate"></h3> <div class="input-group search-container"> <input ng-keyup="$event.keyCode === $ctrl.keyCodes.enter && $ctrl.getMember($ctrl.keyword)" ng-model="$ctrl.keyword" class="form-control input-field" type="text" placeholder="{{\'Label.SearchMembers\' | translate }}" maxlength="120"> <div class="input-group-btn"> <button id="navbar-search-btn" class="input-addon-btn" type="submit"> <span class="icon-search"></span> </button> </div> <div class="input-group-btn group-dropdown"> <button type="button" class="input-dropdown-btn" data-toggle="dropdown" title="{{ $ctrl.currentRoleFilter.name }}"> <span class="rbx-selection-label" ng-bind="$ctrl.currentRoleFilter.name"></span> <span class="icon-down-16x16"></span> </button> <ul data-toggle="dropdown-menu" class="dropdown-menu" role="menu"> <li id="all-roles" ng-class="{ \'active\': $ctrl.allRolesFilter === $ctrl.currentRoleFilter }" title="{{ $ctrl.allRolesFilter.name }}"> <a ng-click="$ctrl.updateRoleFilter($ctrl.allRolesFilter)"> <span class="text-overflow" ng-bind="$ctrl.allRolesFilter.name"></span> <span class="role-member-count" ng-if="$ctrl.group.memberCount">({{ $ctrl.group.memberCount | abbreviate }})</span> </a> </li> <li id="role-{{ role.id }}" ng-repeat="role in $ctrl.roles" ng-if="role.rank !== $ctrl.metadata.roleConfiguration.minRank" ng-class="{ \'active\': role === $ctrl.currentRoleFilter }" title="{{ role.name }}"> <a ng-click="$ctrl.updateRoleFilter(role)"> <span class="text-overflow" ng-bind="role.name"></span> <span class="role-member-count" ng-if="role.memberCount">({{ role.memberCount | abbreviate }})</span> </a> </li> </ul> </div> </div> </div> <div ng-show="$ctrl.layout.isLoading" class="spinner spinner-default"></div> <div ng-show="!membersPager.isBusy() && $ctrl.members.length == 0 && !$ctrl.layout.isLoading && !$ctrl.layout.memberSearchError" class="section-content-off" ng-bind="$ctrl.loadMembersError ? \'Message.BuildGroupRolesListError\' : \'Label.NoMembersInRole\' | translate"></div> <div ng-show="$ctrl.layout.memberSearchError" class="section-content-off" ng-bind="$ctrl.layout.memberSearchError"></div> <ul class="hlist avatar-cards" ng-class="{\'faded\': membersPager.isBusy()}"> <configure-group-member-card member="member" configurable-roles="$ctrl.configurableRoles" group="$ctrl.group" metadata="$ctrl.metadata" exile-user="$ctrl.showExileUserModal" update-user-role="$ctrl.updateUserRole" index="$index" ng-repeat="member in $ctrl.members"></configure-group-member-card> </ul> <div ng-show="$ctrl.members.length > 0 && !$ctrl.layout.isSearchResult" class="pager-holder" cursor-pagination="membersPager"></div>'},8589:function(e){e.exports='<div id="change-owner"> <div class="modal-header"> <button type="button" class="close" ng-click="close()"> <span class="icon-close"></span> </button> <div class="modal-title"> <h4 ng-bind="\'Label.ChangeOwner\' | translate"></h4> </div> </div> <div class="modal-body"> <p class="body-text text-description" ng-bind="\'Label.SelectNewOwner\' | translate"></p> <search-dropdown target-type="User" select="selectUser"></search-dropdown> <div class="avatar-card"> <span class="spinner spinner-sm" ng-show="layout.isLoadingUser"></span> <div class="avatar-card-container" ng-if="newOwner.id" ng-hide="layout.isLoadingUser"> <div class="avatar avatar-headshot avatar-headshot-sm"> <a class="avatar-card-link" ng-href="{{ newOwner.url }}" target="_blank"> <thumbnail-2d class="avatar-card-image" thumbnail-type="thumbnailTypes.avatarHeadshot" thumbnail-target-id="newOwner.id"></thumbnail-2d> </a> </div> <div class="avatar-card-caption"> <div class="text-overflow avatar-name" ng-bind="newOwner.name"></div> <div class="avatar-card-label text-overflow" ng-bind="newOwner.role"></div> </div> </div> </div> <div class="border-warning group-modal-warning"> <span class="icon-warning-orange"></span> <span id="change-owner-warning" class="small text-warning form-warning-text" ng-bind="\'Description.ChangeOwnerWarning\' | translate"></span> </div> </div> <div class="modal-buttons" toggle-loading="" is-inline="true" is-loading="layout.isLoading"> <button type="button" class="modal-button btn-primary-md" ng-disabled="layout.isLoadingUser || !newOwner.id" ng-click="changeOwner()" ng-bind="\'Action.OK\' | translate"></button> <button type="button" class="modal-button btn-secondary-md" ng-click="close()" ng-bind="\'Action.Cancel\' | translate"></button> </div> </div>'},6260:function(e){e.exports='<div id="create-role"> <div class="modal-header"> <button type="button" class="close" ng-click="close()"> <span class="icon-close"></span> </button> <div class="modal-title"> <h4 ng-bind="\'Action.CreateRole\' | translate"></h4> </div> </div> <div class="modal-body"> <p class="body-text text-description" ng-bind-html="\'Message.PurchaseRole\' | translate:{ cost: \'<span class=icon-robux-16x16></span>\' + params.metadata.roleConfiguration.cost}"></p> <div class="form-group form-has-feedback" ng-class="{\'form-has-error\': layout.hasFocusedOnName && !newRole.name }"> <label class="text-label" for="new-role-name" ng-bind="\'Label.Name\' | translate"></label> <input id="new-role-name" class="form-control input-field" maxlength="{{ params.metadata.roleConfiguration.nameMaxLength }}" ng-model="newRole.name" ng-blur="layout.hasFocusedOnName = true"> <p class="form-control-label" ng-if="layout.hasFocusedOnName && !newRole.name.length" ng-bind="\'Message.NameFieldEmpty\' | translate"></p> <p class="form-control-label" ng-if="newRole.name && newRole.name.length > 0" ng-bind="newRole.name.length | formatCharacterCount: params.metadata.roleConfiguration.nameMaxLength"></p> </div> <div class="form-group form-has-feedback"> <label class="text-label" for="new-role-description" ng-bind="\'Heading.Description\' | translate"></label> <textarea id="new-role-description" class="form-control input-field" rows="4" maxlength="{{ params.metadata.roleConfiguration.descriptionMaxLength }}" ng-model="newRole.description"></textarea> <p class="form-control-label" ng-if="newRole.description && newRole.description.length > 0" ng-bind="newRole.description.length | formatCharacterCount: params.metadata.roleConfiguration.descriptionMaxLength"></p> </div> <div class="form-group form-has-feedback" ng-class="{\'form-has-error\': layout.hasFocusedOnRank && !newRole.rank }"> <label class="text-label" for="new-role-rank"> <span ng-bind="\'Heading.Rank\' | translate"></span> <span ng-bind="\'(\' + layout.newRoleMinRank + \'-\' + layout.newRoleMaxRank + \')\'"></span> </label> <input id="new-role-rank" class="form-control input-field input-number" type="number" min="{{ layout.newRoleMinRank }}" max="{{ layout.newRoleMaxRank }}" ng-model="newRole.rank" ng-blur="layout.hasFocusedOnRank = true" oninput="validity.valid?this.save=value:value=this.save"/> </div> <div ng-if="layout.groupFunds >= params.metadata.roleConfiguration.cost" class="checkbox"> <input id="group-funds-checkbox" type="checkbox" ng-checked="layout.isUsingGroupFunds" ng-click="toggleIsUsingGroupFunds()"/> <label for="group-funds-checkbox" ng-bind="\'Label.UseGroupFunds\' | translate"></label> </div> </div> <div class="modal-buttons" toggle-loading="" is-inline="true" is-loading="layout.isLoading"> <button type="button" class="modal-button btn-primary-md" ng-disabled="!newRole.name || !newRole.rank || layout.remainingFunds < 0" ng-click="createRole()" ng-bind="\'Action.Purchase\' | translate"></button> <button type="button" class="modal-button btn-secondary-md" ng-click="close()" ng-bind="\'Action.Cancel\' | translate"></button> </div> <div class="modal-footer-note"> <div ng-if="!layout.errorMessage && layout.remainingFunds >= 0" class="text-footer"> <span ng-bind-html="\'Message.TransactionsBalance\' | translate:{ balance: \'<span class=icon-robux-16x16></span>\' + layout.remainingFunds}"></span> </div> <div ng-if="!layout.errorMessage && layout.remainingFunds < 0" class="text-footer text-error" ng-bind="\'Message.NotEnoughFunds\' | translate"> </div> <div ng-if="layout.errorMessage" class="text-footer text-error" ng-bind="layout.errorMessage"> </div> </div> </div>'},273:function(e){e.exports='<div id="send-affiliate-request"> <div class="modal-header"> <button type="button" class="close" ng-click="close()"> <span class="icon-close"></span> </button> <div class="modal-title"> <h4 ng-bind="modalTitleText()"></h4> </div> </div> <div class="modal-body"> <p class="body-text text-description" ng-bind="\'Description.EnterGroupName\' | translate"></p> <search-dropdown target-type="Group" select="selectGroup"></search-dropdown> <div class="group-container avatar-card-container"> <span class="spinner spinner-sm" ng-show="layout.isLoadingGroup"></span> <div class="avatar-card-content" ng-if="group.id"> <div class="avatar-card-fullbody"> <a ng-href="{{ \'groups\' | seoUrl: group.id:group.name }}" target="_blank" class="avatar-card-link"> <thumbnail-2d class="avatar-card-image" thumbnail-type="thumbnailTypes.groupIcon" thumbnail-target-id="group.id"></thumbnail-2d> </a> </div> <div class="avatar-card-caption"> <a class="avatar-name game-name-title" ng-href="{{ \'groups\' | seoUrl: group.id:group.name }}" target="_blank" ng-bind="group.name"> </a> <div class="avatar-card-label"> <span ng-bind="\'Label.ByOwner\' | translate"></span> <a ng-if="doesGroupHaveOwner()" ng-href="{{ \'users\' | seoUrl: group.owner.userId:\'profile\' }}" class="text-link" ng-bind="group.owner.nameForDisplay" target="_blank"></a> <span ng-if="!doesGroupHaveOwner()" ng-bind="\'Label.NoOne\' | translate"></span> </div> <div class="avatar-card-label" ng-bind="\'Label.Members\' | translate:{ memberCount: group.memberCount }"> </div> </div> </div> </div> </div> <div class="modal-buttons" toggle-loading="" is-inline="true" is-loading="layout.loadingGroup"> <button type="button" class="modal-button btn-primary-md" ng-disabled="layout.loadingGroup || !group.id" ng-click="createGroupRelationship()" ng-bind="modalButtonText()"></button> <button type="button" class="modal-button btn-secondary-md" ng-click="close()" ng-bind="\'Action.Cancel\' | translate"></button> </div> </div>'},3153:function(e){e.exports='<ul class="dropdown-menu" role="menu"> <li id="remove-affiliate" ng-click="$ctrl.removeAffiliate()"> <a ng-bind="\'Action.Remove\' | translate"></a> </li> </ul>'},3061:function(e){e.exports='<ul class="dropdown-menu" role="menu"> <li id="exile-user" ng-if="$ctrl.canExileUser()" ng-click="$ctrl.exileUser($ctrl.member, $ctrl.index)"> <a ng-bind="\'Action.ExileUser\' | translate"></a> </li> </ul>'},792:function(e){"use strict";e.exports=Roblox},5734:function(e){"use strict";e.exports=angular}},r={};function o(e){if(r[e])return r[e].exports;var t=r[e]={exports:{}};return n[e](t,t.exports,o),t.exports}o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,{a:t}),t},o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e=o(5734),t=o.n(e),n=o(726),r=o(9683);(0,n.importFilesUnderPath)(o(6620)),(0,n.importFilesUnderPath)(o(6173)),(0,n.importFilesUnderPath)(o(1866)),(0,n.importFilesUnderPath)(o(4312));var e=o(3323),a=(0,n.templateCacheGenerator)(t(),"configureGroupTemplates",e);t().element(function(){t().bootstrap("#configure-group",[r.Z.name,a.name])})}()}();
//# sourceMappingURL=/rbxcdn/js/b35039af34fbe2241cb6-configureGroup.js.map

/* Bundle detector */
window.Roblox && window.Roblox.BundleDetector && window.Roblox.BundleDetector.bundleDetected("ConfigureGroup");